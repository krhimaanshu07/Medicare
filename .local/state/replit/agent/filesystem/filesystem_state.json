{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Medicare - AI-Powered Medical Imaging Platform\n\n## Overview\n\nMedicare is a comprehensive medical AI platform that provides cutting-edge imaging enhancement solutions for healthcare institutions. The platform features three main products: MedicareHD™ for ultra-high definition MRI enhancement, MedicarePET™ for AI-enhanced PET imaging with dose reduction, and MedicareSYNTH™ for synthetic imaging technology. The application serves as both a marketing website and a platform for demo booking, newsletter subscriptions, and contact management.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript, using Vite as the build tool\n- **Routing**: Wouter for client-side routing with pages for home, products, solutions, research, company, and resources\n- **Styling**: Tailwind CSS with shadcn/ui component library for consistent design\n- **State Management**: TanStack React Query for server state management and API interactions\n- **UI Components**: Comprehensive set of Radix UI primitives wrapped in custom components\n- **Animations**: Framer Motion for smooth animations and transitions\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ES modules\n- **API Pattern**: RESTful API design with JSON responses\n- **Error Handling**: Centralized error handling middleware with structured error responses\n- **Logging**: Custom request/response logging middleware for API endpoints\n- **Storage Interface**: Abstract storage interface with in-memory implementation for demo bookings, newsletter subscriptions, and contact submissions\n\n### Data Storage Solutions\n- **Database**: PostgreSQL configured through Drizzle ORM\n- **ORM**: Drizzle ORM with Zod schema validation\n- **Connection**: Neon Database serverless connection (@neondatabase/serverless)\n- **Schema Management**: Centralized schema definitions in shared directory with type generation\n- **Tables**: Users, demo bookings, newsletter subscriptions, and contact submissions with UUID primary keys\n\n### Development and Build System\n- **Build Tool**: Vite for frontend with React plugin and runtime error overlay\n- **TypeScript**: Strict configuration with path mapping for clean imports\n- **Hot Reload**: Vite HMR integration with Express server in development\n- **Production**: esbuild for server bundling, static file serving for frontend\n- **Environment**: Environment-based configuration with development and production modes\n\n### API Structure\n- **Demo Bookings**: POST /api/demo-bookings (create), GET /api/demo-bookings (list)\n- **Newsletter**: POST /api/newsletter (subscribe), DELETE /api/newsletter/:email (unsubscribe)\n- **Contact**: POST /api/contact (submit), GET /api/contact (list submissions)\n- **Validation**: Zod schema validation for all API endpoints with structured error responses\n- **Response Format**: Consistent JSON responses with success/error indicators\n\n## External Dependencies\n\n### Core Dependencies\n- **React Ecosystem**: React 18, React DOM, TanStack React Query for state management\n- **UI Framework**: Radix UI primitives, shadcn/ui components, Tailwind CSS for styling\n- **Database**: Drizzle ORM, Neon Database serverless connection, PostgreSQL dialect\n- **Server**: Express.js, TypeScript runtime with tsx, Vite for development server\n- **Validation**: Zod for schema validation, react-hook-form with resolvers for form handling\n\n### Development Tools\n- **Build Tools**: Vite with React plugin, esbuild for production builds, TypeScript compiler\n- **Development**: Replit-specific plugins for cartographer and runtime error overlay\n- **Animation**: Framer Motion for UI animations and page transitions\n- **Utilities**: date-fns for date manipulation, clsx and tailwind-merge for className handling\n\n### Third-Party Services\n- **Database Hosting**: Neon Database for PostgreSQL hosting\n- **Image CDN**: Unsplash for placeholder images throughout the application\n- **Component Library**: Extensive Radix UI integration for accessible components\n- **Form Handling**: React Hook Form with Zod resolvers for type-safe form validation","size_bytes":4198},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2627},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertDemoBookingSchema, insertNewsletterSchema, insertContactSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Demo booking routes\n  app.post(\"/api/demo-bookings\", async (req, res) => {\n    try {\n      const validatedData = insertDemoBookingSchema.parse(req.body);\n      const booking = await storage.createDemoBooking(validatedData);\n      res.json({ success: true, booking });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ success: false, errors: error.errors });\n      } else {\n        res.status(500).json({ success: false, message: \"Internal server error\" });\n      }\n    }\n  });\n\n  app.get(\"/api/demo-bookings\", async (req, res) => {\n    try {\n      const bookings = await storage.getDemoBookings();\n      res.json({ success: true, bookings });\n    } catch (error) {\n      res.status(500).json({ success: false, message: \"Internal server error\" });\n    }\n  });\n\n  // Newsletter subscription routes\n  app.post(\"/api/newsletter\", async (req, res) => {\n    try {\n      const validatedData = insertNewsletterSchema.parse(req.body);\n      const subscription = await storage.createNewsletterSubscription(validatedData);\n      res.json({ success: true, subscription });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ success: false, errors: error.errors });\n      } else {\n        res.status(500).json({ success: false, message: \"Internal server error\" });\n      }\n    }\n  });\n\n  app.delete(\"/api/newsletter/:email\", async (req, res) => {\n    try {\n      const { email } = req.params;\n      const success = await storage.unsubscribeNewsletter(email);\n      if (success) {\n        res.json({ success: true, message: \"Unsubscribed successfully\" });\n      } else {\n        res.status(404).json({ success: false, message: \"Email not found\" });\n      }\n    } catch (error) {\n      res.status(500).json({ success: false, message: \"Internal server error\" });\n    }\n  });\n\n  // Contact form routes\n  app.post(\"/api/contact\", async (req, res) => {\n    try {\n      const validatedData = insertContactSchema.parse(req.body);\n      const contact = await storage.createContactSubmission(validatedData);\n      res.json({ success: true, contact });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ success: false, errors: error.errors });\n      } else {\n        res.status(500).json({ success: false, message: \"Internal server error\" });\n      }\n    }\n  });\n\n  app.get(\"/api/contact\", async (req, res) => {\n    try {\n      const contacts = await storage.getContactSubmissions();\n      res.json({ success: true, contacts });\n    } catch (error) {\n      res.status(500).json({ success: false, message: \"Internal server error\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":3048},"server/storage.ts":{"content":"import { \n  type User, \n  type InsertUser,\n  type DemoBooking,\n  type InsertDemoBooking,\n  type Newsletter,\n  type InsertNewsletter,\n  type ContactSubmission,\n  type InsertContact\n} from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  \n  // Demo booking methods\n  createDemoBooking(booking: InsertDemoBooking): Promise<DemoBooking>;\n  getDemoBookings(): Promise<DemoBooking[]>;\n  getDemoBooking(id: string): Promise<DemoBooking | undefined>;\n  \n  // Newsletter methods\n  createNewsletterSubscription(subscription: InsertNewsletter): Promise<Newsletter>;\n  getNewsletterSubscriptions(): Promise<Newsletter[]>;\n  unsubscribeNewsletter(email: string): Promise<boolean>;\n  \n  // Contact methods\n  createContactSubmission(contact: InsertContact): Promise<ContactSubmission>;\n  getContactSubmissions(): Promise<ContactSubmission[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private demoBookings: Map<string, DemoBooking>;\n  private newsletters: Map<string, Newsletter>;\n  private contacts: Map<string, ContactSubmission>;\n\n  constructor() {\n    this.users = new Map();\n    this.demoBookings = new Map();\n    this.newsletters = new Map();\n    this.contacts = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async createDemoBooking(insertBooking: InsertDemoBooking): Promise<DemoBooking> {\n    const id = randomUUID();\n    const booking: DemoBooking = { \n      ...insertBooking, \n      id,\n      createdAt: new Date()\n    };\n    this.demoBookings.set(id, booking);\n    return booking;\n  }\n\n  async getDemoBookings(): Promise<DemoBooking[]> {\n    return Array.from(this.demoBookings.values());\n  }\n\n  async getDemoBooking(id: string): Promise<DemoBooking | undefined> {\n    return this.demoBookings.get(id);\n  }\n\n  async createNewsletterSubscription(insertNewsletter: InsertNewsletter): Promise<Newsletter> {\n    const id = randomUUID();\n    const newsletter: Newsletter = {\n      ...insertNewsletter,\n      id,\n      subscribedAt: new Date(),\n      isActive: true\n    };\n    this.newsletters.set(id, newsletter);\n    return newsletter;\n  }\n\n  async getNewsletterSubscriptions(): Promise<Newsletter[]> {\n    return Array.from(this.newsletters.values());\n  }\n\n  async unsubscribeNewsletter(email: string): Promise<boolean> {\n    const newsletter = Array.from(this.newsletters.values()).find(n => n.email === email);\n    if (newsletter) {\n      newsletter.isActive = false;\n      this.newsletters.set(newsletter.id, newsletter);\n      return true;\n    }\n    return false;\n  }\n\n  async createContactSubmission(insertContact: InsertContact): Promise<ContactSubmission> {\n    const id = randomUUID();\n    const contact: ContactSubmission = {\n      ...insertContact,\n      id,\n      submittedAt: new Date(),\n      company: insertContact.company ?? null\n    };\n    this.contacts.set(id, contact);\n    return contact;\n  }\n\n  async getContactSubmissions(): Promise<ContactSubmission[]> {\n    return Array.from(this.contacts.values());\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":3640},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const demoBookings = pgTable(\"demo_bookings\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  firstName: text(\"first_name\").notNull(),\n  lastName: text(\"last_name\").notNull(),\n  email: text(\"email\").notNull(),\n  institution: text(\"institution\").notNull(),\n  primaryInterest: text(\"primary_interest\").notNull(),\n  preferredDate: text(\"preferred_date\").notNull(),\n  preferredTime: text(\"preferred_time\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const newsletterSubscriptions = pgTable(\"newsletter_subscriptions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: text(\"email\").notNull().unique(),\n  subscribedAt: timestamp(\"subscribed_at\").defaultNow(),\n  isActive: boolean(\"is_active\").default(true),\n});\n\nexport const contactSubmissions = pgTable(\"contact_submissions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  company: text(\"company\"),\n  message: text(\"message\").notNull(),\n  submittedAt: timestamp(\"submitted_at\").defaultNow(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertDemoBookingSchema = createInsertSchema(demoBookings).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertNewsletterSchema = createInsertSchema(newsletterSubscriptions).omit({\n  id: true,\n  subscribedAt: true,\n  isActive: true,\n});\n\nexport const insertContactSchema = createInsertSchema(contactSubmissions).omit({\n  id: true,\n  submittedAt: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type DemoBooking = typeof demoBookings.$inferSelect;\nexport type InsertDemoBooking = z.infer<typeof insertDemoBookingSchema>;\nexport type Newsletter = typeof newsletterSubscriptions.$inferSelect;\nexport type InsertNewsletter = z.infer<typeof insertNewsletterSchema>;\nexport type ContactSubmission = typeof contactSubmissions.$inferSelect;\nexport type InsertContact = z.infer<typeof insertContactSchema>;\n","size_bytes":2514},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"@/lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/home\";\nimport Products from \"@/pages/products\";\nimport Solutions from \"@/pages/solutions\";\nimport Research from \"@/pages/research\";\nimport Company from \"@/pages/company\";\nimport Resources from \"@/pages/resources\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/products\" component={Products} />\n      <Route path=\"/solutions\" component={Solutions} />\n      <Route path=\"/research\" component={Research} />\n      <Route path=\"/company\" component={Company} />\n      <Route path=\"/resources\" component={Resources} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1178},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(20, 14.3%, 4.1%);\n  --muted: hsl(210, 40%, 98%);\n  --muted-foreground: hsl(215, 16%, 47%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(20, 14.3%, 4.1%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(20, 14.3%, 4.1%);\n  --border: hsl(214, 32%, 91%);\n  --input: hsl(214, 32%, 91%);\n  --primary: hsl(207, 90%, 54%);\n  --primary-foreground: hsl(210, 40%, 98%);\n  --secondary: hsl(210, 40%, 96%);\n  --secondary-foreground: hsl(222, 84%, 5%);\n  --accent: hsl(210, 40%, 96%);\n  --accent-foreground: hsl(222, 84%, 5%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --ring: hsl(207, 90%, 54%);\n  --radius: 0.5rem;\n  \n  /* Medical themed colors */\n  --medical-blue: hsl(207, 90%, 54%);\n  --medical-dark: hsl(210, 100%, 40%);\n  --medical-light: hsl(195, 100%, 50%);\n  --medical-tint: hsl(210, 100%, 95%);\n  --success: hsl(142, 76%, 36%);\n  --warning: hsl(25, 95%, 53%);\n}\n\n.dark {\n  --background: hsl(222, 84%, 5%);\n  --foreground: hsl(210, 40%, 98%);\n  --muted: hsl(217, 32%, 17%);\n  --muted-foreground: hsl(215, 20%, 65%);\n  --popover: hsl(222, 84%, 5%);\n  --popover-foreground: hsl(210, 40%, 98%);\n  --card: hsl(222, 84%, 5%);\n  --card-foreground: hsl(210, 40%, 98%);\n  --border: hsl(217, 32%, 17%);\n  --input: hsl(217, 32%, 17%);\n  --primary: hsl(207, 90%, 54%);\n  --primary-foreground: hsl(222, 84%, 5%);\n  --secondary: hsl(217, 32%, 17%);\n  --secondary-foreground: hsl(210, 40%, 98%);\n  --accent: hsl(217, 32%, 17%);\n  --accent-foreground: hsl(210, 40%, 98%);\n  --destructive: hsl(0, 62%, 30%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --ring: hsl(207, 90%, 54%);\n  --radius: 0.5rem;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n@layer utilities {\n  .gradient-bg {\n    background: linear-gradient(135deg, var(--medical-blue) 0%, var(--medical-light) 100%);\n  }\n  \n  .glass-effect {\n    backdrop-filter: blur(10px);\n    background: rgba(255, 255, 255, 0.1);\n  }\n  \n  .hover-lift {\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n  }\n  \n  .hover-lift:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 20px 40px rgba(0, 102, 204, 0.15);\n  }\n  \n  .animate-fade-in {\n    animation: fadeIn 0.6s ease-in-out;\n  }\n  \n  .animate-slide-up {\n    animation: slideUp 0.8s ease-out;\n  }\n  \n  .animate-pulse-slow {\n    animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n  }\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n@keyframes slideUp {\n  from { opacity: 0; transform: translateY(30px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n","size_bytes":2755},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/case-studies.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { motion } from \"framer-motion\";\nimport type { CaseStudy } from \"@/lib/types\";\n\nconst caseStudies: CaseStudy[] = [\n  {\n    id: \"stanford\",\n    institution: \"Stanford Medical Center\",\n    title: \"60% Reduction in Scan Time\",\n    description: \"Implementation of MedicareHD resulted in significant workflow improvements and higher patient satisfaction scores.\",\n    metrics: [\n      { label: \"Patient Throughput\", value: \"+65%\", type: \"success\" },\n      { label: \"Image Quality Score\", value: \"9.2/10\", type: \"success\" },\n      { label: \"ROI Period\", value: \"8 months\", type: \"success\" },\n    ],\n    image: \"https://images.unsplash.com/photo-1586773860418-d37222d8fce3?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=300\",\n  },\n  {\n    id: \"mayo\",\n    institution: \"Mayo Clinic Network\",\n    title: \"75% Dose Reduction Achieved\",\n    description: \"MedicarePET implementation across 12 facilities demonstrated significant radiation dose reduction without compromising diagnostic accuracy.\",\n    metrics: [\n      { label: \"Radiation Dose\", value: \"-75%\", type: \"success\" },\n      { label: \"Diagnostic Accuracy\", value: \"98.5%\", type: \"success\" },\n      { label: \"Patient Comfort\", value: \"+40%\", type: \"success\" },\n    ],\n    image: \"https://images.unsplash.com/photo-1551076805-e1869033e561?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=300\",\n  },\n  {\n    id: \"cleveland\",\n    institution: \"Cleveland Clinic\",\n    title: \"Zero-Time Synthetic Imaging\",\n    description: \"First clinical deployment of MedicareSYNTH achieved unprecedented workflow efficiency with synthetic STIR imaging.\",\n    metrics: [\n      { label: \"STIR Acquisition\", value: \"0 minutes\", type: \"success\" },\n      { label: \"Image Quality\", value: \"Superior\", type: \"success\" },\n      { label: \"Workflow Efficiency\", value: \"+85%\", type: \"success\" },\n    ],\n    image: \"https://images.unsplash.com/photo-1582719471384-894fbb16e074?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=300\",\n  },\n];\n\nexport function CaseStudies() {\n  return (\n    <section className=\"py-20 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          viewport={{ once: true }}\n        >\n          <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Proven Clinical Results</h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Real-world outcomes from leading healthcare institutions using our AI technology\n          </p>\n        </motion.div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {caseStudies.map((study, index) => (\n            <motion.div\n              key={study.id}\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: index * 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"hover-lift border-0 shadow-lg\">\n                <CardContent className=\"p-8\">\n                  <div className=\"mb-6\">\n                    <img\n                      src={study.image}\n                      alt={study.institution}\n                      className=\"w-full h-48 object-cover rounded-lg\"\n                    />\n                  </div>\n                  \n                  <div className=\"mb-4\">\n                    <h3 className=\"text-xl font-bold text-gray-900 mb-2\">{study.institution}</h3>\n                    <Badge className=\"bg-[var(--medical-blue)] text-white\">{study.title}</Badge>\n                  </div>\n                  \n                  <p className=\"text-gray-600 mb-6\">{study.description}</p>\n                  \n                  <div className=\"space-y-2 mb-6\">\n                    {study.metrics.map((metric, metricIndex) => (\n                      <div key={metricIndex} className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">{metric.label}</span>\n                        <span\n                          className={`font-semibold ${\n                            metric.type === \"success\" ? \"text-green-600\" : \"text-blue-600\"\n                          }`}\n                        >\n                          {metric.value}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                  \n                  <Button\n                    variant=\"link\"\n                    className=\"text-[var(--medical-blue)] hover:text-[var(--medical-dark)] p-0\"\n                  >\n                    Read Full Case Study →\n                  </Button>\n                </CardContent>\n              </Card>\n            </motion.div>\n          ))}\n        </div>\n\n        <motion.div\n          className=\"text-center mt-12\"\n          initial={{ opacity: 0 }}\n          whileInView={{ opacity: 1 }}\n          transition={{ duration: 0.6, delay: 0.3 }}\n          viewport={{ once: true }}\n        >\n          <Button\n            size=\"lg\"\n            className=\"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\"\n          >\n            View All Case Studies\n          </Button>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5458},"client/src/components/demo-booking.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Video, TrendingUp, Settings, Calendar } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\nimport type { InsertDemoBooking } from \"@shared/schema\";\n\nexport function DemoBooking() {\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    institution: \"\",\n    primaryInterest: \"\",\n    preferredDate: \"\",\n    preferredTime: \"\",\n  });\n\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const demoMutation = useMutation({\n    mutationFn: async (data: InsertDemoBooking) => {\n      const response = await apiRequest(\"POST\", \"/api/demo-bookings\", data);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Demo Booked Successfully!\",\n        description: \"We'll contact you within 24 hours to confirm your demo session.\",\n        duration: 5000,\n      });\n      setFormData({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        institution: \"\",\n        primaryInterest: \"\",\n        preferredDate: \"\",\n        preferredTime: \"\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/demo-bookings\"] });\n    },\n    onError: () => {\n      toast({\n        title: \"Booking Failed\",\n        description: \"There was an error booking your demo. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    demoMutation.mutate(formData);\n  };\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <section id=\"demo\" className=\"py-20 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n          {/* Left Content */}\n          <motion.div\n            initial={{ opacity: 0, x: -30 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">See Our AI in Action</h2>\n            <p className=\"text-xl text-gray-600 mb-8\">\n              Book a personalized demo and witness how our AI technology can transform your medical imaging workflow.\n            </p>\n\n            {/* Demo Benefits */}\n            <div className=\"space-y-4 mb-8\">\n              <div className=\"flex items-start\">\n                <Video className=\"text-[var(--medical-blue)] h-6 w-6 mr-3 mt-1\" />\n                <div>\n                  <h4 className=\"font-semibold text-gray-900\">Live Product Demo</h4>\n                  <p className=\"text-gray-600\">See real-time AI enhancement on actual medical images</p>\n                </div>\n              </div>\n              <div className=\"flex items-start\">\n                <TrendingUp className=\"text-[var(--medical-blue)] h-6 w-6 mr-3 mt-1\" />\n                <div>\n                  <h4 className=\"font-semibold text-gray-900\">ROI Analysis</h4>\n                  <p className=\"text-gray-600\">Calculate potential time and cost savings for your facility</p>\n                </div>\n              </div>\n              <div className=\"flex items-start\">\n                <Settings className=\"text-[var(--medical-blue)] h-6 w-6 mr-3 mt-1\" />\n                <div>\n                  <h4 className=\"font-semibold text-gray-900\">Integration Planning</h4>\n                  <p className=\"text-gray-600\">Discuss seamless integration with your existing systems</p>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Right Content - Demo Booking Form */}\n          <motion.div\n            initial={{ opacity: 0, x: 30 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            viewport={{ once: true }}\n          >\n            <Card className=\"bg-[var(--medical-tint)] border-0\">\n              <CardContent className=\"p-8\">\n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div>\n                    <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">Book Your Demo</h3>\n                    <p className=\"text-gray-600\">Choose your preferred time and we'll set up everything for you.</p>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"firstName\">First Name</Label>\n                      <Input\n                        id=\"firstName\"\n                        value={formData.firstName}\n                        onChange={(e) => handleInputChange(\"firstName\", e.target.value)}\n                        placeholder=\"John\"\n                        required\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"lastName\">Last Name</Label>\n                      <Input\n                        id=\"lastName\"\n                        value={formData.lastName}\n                        onChange={(e) => handleInputChange(\"lastName\", e.target.value)}\n                        placeholder=\"Doe\"\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"email\">Email</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      value={formData.email}\n                      onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                      placeholder=\"john.doe@hospital.com\"\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"institution\">Institution</Label>\n                    <Input\n                      id=\"institution\"\n                      value={formData.institution}\n                      onChange={(e) => handleInputChange(\"institution\", e.target.value)}\n                      placeholder=\"Hospital/Clinic Name\"\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"primaryInterest\">Primary Interest</Label>\n                    <Select onValueChange={(value) => handleInputChange(\"primaryInterest\", value)}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select your primary interest\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"MRI Enhancement\">MRI Enhancement</SelectItem>\n                        <SelectItem value=\"PET Imaging\">PET Imaging</SelectItem>\n                        <SelectItem value=\"Synthetic Imaging\">Synthetic Imaging</SelectItem>\n                        <SelectItem value=\"Complete Suite\">Complete Suite</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  <div>\n                    <Label>Preferred Date & Time</Label>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <Input\n                        type=\"date\"\n                        value={formData.preferredDate}\n                        onChange={(e) => handleInputChange(\"preferredDate\", e.target.value)}\n                        required\n                        min={new Date().toISOString().split('T')[0]}\n                      />\n                      <Select onValueChange={(value) => handleInputChange(\"preferredTime\", value)}>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Time\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"9:00 AM\">9:00 AM</SelectItem>\n                          <SelectItem value=\"10:00 AM\">10:00 AM</SelectItem>\n                          <SelectItem value=\"11:00 AM\">11:00 AM</SelectItem>\n                          <SelectItem value=\"2:00 PM\">2:00 PM</SelectItem>\n                          <SelectItem value=\"3:00 PM\">3:00 PM</SelectItem>\n                          <SelectItem value=\"4:00 PM\">4:00 PM</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  </div>\n\n                  <Button\n                    type=\"submit\"\n                    className=\"w-full bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\"\n                    size=\"lg\"\n                    disabled={demoMutation.isPending}\n                  >\n                    <Calendar className=\"mr-2 h-4 w-4\" />\n                    {demoMutation.isPending ? \"Scheduling...\" : \"Schedule Demo\"}\n                  </Button>\n\n                  <p className=\"text-sm text-gray-500 text-center\">\n                    No commitment required. Cancel anytime.\n                  </p>\n                </form>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":9586},"client/src/components/footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Heart, Linkedin, Twitter, Youtube, Github } from \"lucide-react\";\n\nexport function Footer() {\n  return (\n    <footer className=\"bg-gray-900 text-white py-16\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {/* Company Info */}\n          <div>\n            <Link href=\"/\" className=\"flex items-center mb-6\">\n              <Heart className=\"text-[var(--medical-blue)] h-8 w-8 mr-2\" />\n              <span className=\"text-2xl font-bold\">Medicare</span>\n            </Link>\n            <p className=\"text-gray-400 mb-6\">\n              Transforming healthcare through innovative AI solutions for medical imaging.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                <Linkedin className=\"h-5 w-5\" />\n              </a>\n              <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                <Twitter className=\"h-5 w-5\" />\n              </a>\n              <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                <Youtube className=\"h-5 w-5\" />\n              </a>\n              <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                <Github className=\"h-5 w-5\" />\n              </a>\n            </div>\n          </div>\n\n          {/* Products */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-6\">Products</h4>\n            <ul className=\"space-y-3\">\n              <li>\n                <Link href=\"/products#medicarehd\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  MedicareHD™\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/products#medicarepet\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  MedicarePET™\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/products#medicaresynth\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  MedicareSYNTH™\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/products#medicarealign\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  MedicareALIGN™\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/products\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  Product Comparison\n                </Link>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  Pricing\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          {/* Resources */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-6\">Resources</h4>\n            <ul className=\"space-y-3\">\n              <li>\n                <Link href=\"/resources\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  Research Papers\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/resources\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  Case Studies\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/resources\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  Technical Docs\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/resources\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  Webinars\n                </Link>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  Blog\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  News\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          {/* Company */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-6\">Company</h4>\n            <ul className=\"space-y-3\">\n              <li>\n                <Link href=\"/company\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  About Us\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/company#team\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  Leadership\n                </Link>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  Careers\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  Partners\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  Contact\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors\">\n                  Support\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        {/* Footer Bottom */}\n        <div className=\"border-t border-gray-800 mt-12 pt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center\">\n            <div className=\"text-gray-400 mb-4 md:mb-0\">\n              © 2024 Medicare. All rights reserved.\n            </div>\n            <div className=\"flex space-x-6\">\n              <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                Privacy Policy\n              </a>\n              <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                Terms of Service\n              </a>\n              <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                Cookie Policy\n              </a>\n              <a href=\"#\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                GDPR\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":6497},"client/src/components/hero.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Calendar, Play } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\n\nexport function Hero() {\n  return (\n    <section className=\"relative min-h-screen flex items-center gradient-bg overflow-hidden\">\n      {/* Background Elements */}\n      <div className=\"absolute inset-0\">\n        <motion.div\n          className=\"absolute top-20 left-10 w-32 h-32 bg-white/10 rounded-full\"\n          animate={{ scale: [1, 1.2, 1] }}\n          transition={{ duration: 4, repeat: Infinity }}\n        />\n        <motion.div\n          className=\"absolute bottom-20 right-10 w-48 h-48 bg-white/5 rounded-full\"\n          animate={{ scale: [1, 1.1, 1] }}\n          transition={{ duration: 5, repeat: Infinity, delay: 1 }}\n        />\n        <motion.div\n          className=\"absolute top-1/2 right-1/4 w-24 h-24 bg-white/10 rounded-full\"\n          animate={{ scale: [1, 1.3, 1] }}\n          transition={{ duration: 3, repeat: Infinity, delay: 2 }}\n        />\n      </div>\n\n      <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n          {/* Left Content */}\n          <motion.div\n            className=\"text-white\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <h1 className=\"text-5xl lg:text-6xl font-bold leading-tight mb-6\">\n              AI-Powered <span className=\"text-yellow-300\">Medical Imaging</span> Revolution\n            </h1>\n            <p className=\"text-xl mb-8 text-blue-100 leading-relaxed\">\n              Experience unprecedented speed and quality in MRI and PET imaging with our cutting-edge AI solutions. \n              Reduce scan times by up to 80% while enhancing image clarity.\n            </p>\n\n            {/* Key Benefits */}\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-6 mb-8\">\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-yellow-300\">80%</div>\n                <div className=\"text-sm text-blue-100\">Faster Scans</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-yellow-300\">FDA</div>\n                <div className=\"text-sm text-blue-100\">Cleared</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-yellow-300\">24/7</div>\n                <div className=\"text-sm text-blue-100\">Support</div>\n              </div>\n            </div>\n\n            {/* CTA Buttons */}\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <Button\n                size=\"lg\"\n                className=\"bg-white text-[var(--medical-blue)] hover:bg-gray-100\"\n                onClick={() => document.getElementById('demo')?.scrollIntoView({ behavior: 'smooth' })}\n              >\n                <Calendar className=\"mr-2 h-4 w-4\" />\n                Book Free Demo\n              </Button>\n              <Button\n                size=\"lg\"\n                variant=\"outline\"\n                className=\"border-white text-white hover:bg-white hover:text-[var(--medical-blue)]\"\n              >\n                <Play className=\"mr-2 h-4 w-4\" />\n                Watch Demo Video\n              </Button>\n            </div>\n          </motion.div>\n\n          {/* Right Content - Interactive Demo Preview */}\n          <motion.div\n            className=\"relative\"\n            initial={{ opacity: 0, x: 50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8, delay: 0.3 }}\n          >\n            <div className=\"glass-effect rounded-2xl p-6 border border-white/20\">\n              {/* AI Enhancement Preview */}\n              <div className=\"mb-6\">\n                <h3 className=\"text-white text-xl font-semibold mb-4\">Live AI Enhancement Preview</h3>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"text-center\">\n                    <div className=\"bg-gray-800 rounded-lg p-4 mb-2\">\n                      <img\n                        src=\"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=200\"\n                        alt=\"Original MRI scan\"\n                        className=\"w-full h-32 object-cover rounded\"\n                      />\n                    </div>\n                    <div className=\"text-white text-sm\">Original: 4:30</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"bg-gray-800 rounded-lg p-4 mb-2\">\n                      <img\n                        src=\"https://images.unsplash.com/photo-1576086213369-97a306d36557?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=200\"\n                        alt=\"AI enhanced MRI scan\"\n                        className=\"w-full h-32 object-cover rounded\"\n                      />\n                    </div>\n                    <div className=\"text-yellow-300 text-sm\">AI Enhanced: 0:54</div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Processing Indicator */}\n              <div className=\"bg-white/5 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"text-white text-sm\">AI Processing</span>\n                  <Badge className=\"bg-green-600 text-white\">Complete</Badge>\n                </div>\n                <div className=\"w-full bg-white/20 rounded-full h-2\">\n                  <motion.div\n                    className=\"bg-green-500 h-2 rounded-full\"\n                    initial={{ width: \"0%\" }}\n                    animate={{ width: \"100%\" }}\n                    transition={{ duration: 2, delay: 1 }}\n                  />\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":6072},"client/src/components/navigation.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { SearchDialog } from \"@/components/search-dialog\";\nimport { Heart, Menu, Search } from \"lucide-react\";\n\nexport function Navigation() {\n  const [location] = useLocation();\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  const navItems = [\n    { href: \"/products\", label: \"Products\" },\n    { href: \"/solutions\", label: \"Solutions\" },\n    { href: \"/research\", label: \"Research\" },\n    { href: \"/company\", label: \"Company\" },\n    { href: \"/resources\", label: \"Resources\" },\n  ];\n\n  return (\n    <>\n      <nav className=\"fixed top-0 w-full bg-white/95 backdrop-blur-md z-50 border-b border-gray-100\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            {/* Logo */}\n            <Link href=\"/\" className=\"flex items-center\">\n              <Heart className=\"text-[var(--medical-blue)] h-8 w-8 mr-2\" />\n              <span className=\"text-2xl font-bold text-gray-900\">Medicare</span>\n            </Link>\n\n            {/* Desktop Navigation */}\n            <div className=\"hidden md:flex items-center space-x-8\">\n              {navItems.map((item) => (\n                <Link\n                  key={item.href}\n                  href={item.href}\n                  className={`text-sm font-medium transition-colors hover:text-[var(--medical-blue)] ${\n                    location === item.href ? \"text-[var(--medical-blue)]\" : \"text-gray-600\"\n                  }`}\n                >\n                  {item.label}\n                </Link>\n              ))}\n            </div>\n\n            {/* Desktop Actions */}\n            <div className=\"hidden md:flex items-center space-x-4\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setIsSearchOpen(true)}\n                className=\"text-[var(--medical-blue)] hover:text-[var(--medical-dark)]\"\n              >\n                <Search className=\"h-4 w-4\" />\n              </Button>\n              <Link href=\"/#demo\">\n                <Button className=\"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\">\n                  Book Demo\n                </Button>\n              </Link>\n            </div>\n\n            {/* Mobile Menu */}\n            <div className=\"md:hidden\">\n              <Sheet open={isMobileMenuOpen} onOpenChange={setIsMobileMenuOpen}>\n                <SheetTrigger asChild>\n                  <Button variant=\"ghost\" size=\"sm\">\n                    <Menu className=\"h-6 w-6\" />\n                  </Button>\n                </SheetTrigger>\n                <SheetContent side=\"right\" className=\"w-[300px] sm:w-[400px]\">\n                  <nav className=\"flex flex-col space-y-4\">\n                    <Link href=\"/\" className=\"flex items-center mb-6\">\n                      <Heart className=\"text-[var(--medical-blue)] h-6 w-6 mr-2\" />\n                      <span className=\"text-xl font-bold\">Medicare</span>\n                    </Link>\n                    {navItems.map((item) => (\n                      <Link\n                        key={item.href}\n                        href={item.href}\n                        className=\"text-gray-600 hover:text-[var(--medical-blue)] font-medium\"\n                        onClick={() => setIsMobileMenuOpen(false)}\n                      >\n                        {item.label}\n                      </Link>\n                    ))}\n                    <div className=\"pt-4 border-t\">\n                      <Button\n                        onClick={() => {\n                          setIsSearchOpen(true);\n                          setIsMobileMenuOpen(false);\n                        }}\n                        variant=\"outline\"\n                        className=\"w-full mb-3\"\n                      >\n                        <Search className=\"h-4 w-4 mr-2\" />\n                        Search\n                      </Button>\n                      <Link href=\"/#demo\">\n                        <Button className=\"w-full bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\">\n                          Book Demo\n                        </Button>\n                      </Link>\n                    </div>\n                  </nav>\n                </SheetContent>\n              </Sheet>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <SearchDialog open={isSearchOpen} onOpenChange={setIsSearchOpen} />\n    </>\n  );\n}\n","size_bytes":4668},"client/src/components/newsletter.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Shield, Clock, Users } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\nimport type { InsertNewsletter } from \"@shared/schema\";\n\nexport function Newsletter() {\n  const [email, setEmail] = useState(\"\");\n  const { toast } = useToast();\n\n  const newsletterMutation = useMutation({\n    mutationFn: async (data: InsertNewsletter) => {\n      const response = await apiRequest(\"POST\", \"/api/newsletter\", data);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Successfully Subscribed!\",\n        description: \"Thank you for subscribing to our newsletter. You'll receive monthly updates on medical AI innovations.\",\n        duration: 5000,\n      });\n      setEmail(\"\");\n    },\n    onError: () => {\n      toast({\n        title: \"Subscription Failed\",\n        description: \"There was an error subscribing to our newsletter. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (email) {\n      newsletterMutation.mutate({ email });\n    }\n  };\n\n  return (\n    <section className=\"py-20 bg-[var(--medical-blue)]\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          viewport={{ once: true }}\n        >\n          <h2 className=\"text-4xl font-bold text-white mb-6\">\n            Stay Updated with Medical AI Innovations\n          </h2>\n          <p className=\"text-xl text-blue-100 mb-8\">\n            Get the latest research, product updates, and industry insights delivered to your inbox monthly.\n          </p>\n\n          {/* Newsletter Form */}\n          <div className=\"max-w-2xl mx-auto\">\n            <form onSubmit={handleSubmit} className=\"flex flex-col sm:flex-row gap-4\">\n              <Input\n                type=\"email\"\n                placeholder=\"Enter your email address\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"flex-1 bg-white border-0 text-lg h-12\"\n                required\n              />\n              <Button\n                type=\"submit\"\n                size=\"lg\"\n                className=\"bg-white text-[var(--medical-blue)] hover:bg-gray-100\"\n                disabled={newsletterMutation.isPending}\n              >\n                {newsletterMutation.isPending ? \"Subscribing...\" : \"Subscribe\"}\n              </Button>\n            </form>\n            <p className=\"text-blue-100 text-sm mt-4\">\n              Join 10,000+ healthcare professionals. Unsubscribe anytime.\n            </p>\n          </div>\n\n          {/* Trust Indicators */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mt-12\">\n            <motion.div\n              className=\"text-center\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: 0.1 }}\n              viewport={{ once: true }}\n            >\n              <Shield className=\"text-white h-8 w-8 mx-auto mb-3\" />\n              <div className=\"text-white font-medium\">HIPAA Compliant</div>\n              <div className=\"text-blue-100 text-sm\">Your data is protected</div>\n            </motion.div>\n            <motion.div\n              className=\"text-center\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              <Clock className=\"text-white h-8 w-8 mx-auto mb-3\" />\n              <div className=\"text-white font-medium\">Monthly Updates</div>\n              <div className=\"text-blue-100 text-sm\">No spam, just insights</div>\n            </motion.div>\n            <motion.div\n              className=\"text-center\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: 0.3 }}\n              viewport={{ once: true }}\n            >\n              <Users className=\"text-white h-8 w-8 mx-auto mb-3\" />\n              <div className=\"text-white font-medium\">Expert Content</div>\n              <div className=\"text-blue-100 text-sm\">From industry leaders</div>\n            </motion.div>\n          </div>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4749},"client/src/components/product-showcase.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Check, Brain, Eye, Wand2 } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\nimport type { Product } from \"@/lib/types\";\n\nconst products: Product[] = [\n  {\n    id: \"medicarehd\",\n    name: \"MedicareHD™\",\n    title: \"Ultra-High Definition MRI Enhancement\",\n    description: \"Ultra-high definition MRI enhancement with advanced denoising and sharpening. Achieve superior image quality in 75% less time.\",\n    features: [\n      \"Up to 75% faster acquisition\",\n      \"Enhanced image clarity\",\n      \"All body regions\"\n    ],\n    status: \"FDA CLEARED\",\n    icon: \"brain\",\n    image: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=300\"\n  },\n  {\n    id: \"medicarepet\",\n    name: \"MedicarePET™\",\n    title: \"AI-Enhanced PET Imaging\",\n    description: \"AI-powered PET imaging enhancement that reduces radiation dose by up to 75% while maintaining diagnostic quality.\",\n    features: [\n      \"75% dose reduction\",\n      \"4x scan acceleration\",\n      \"Multiple tracers\"\n    ],\n    status: \"CE MARKED\",\n    icon: \"eye\",\n    image: \"https://images.unsplash.com/photo-1576086213369-97a306d36557?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=300\"\n  },\n  {\n    id: \"medicaresynth\",\n    name: \"MedicareSYNTH™\",\n    title: \"Synthetic Imaging Technology\",\n    description: \"Industry-first synthetic imaging software that generates high-quality images in zero acquisition time.\",\n    features: [\n      \"0-minute acquisition\",\n      \"Synthetic STIR imaging\",\n      \"100% acceleration\"\n    ],\n    status: \"BREAKTHROUGH\",\n    icon: \"wand2\",\n    image: \"https://images.unsplash.com/photo-1551601651-2a8555f1a136?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=300\"\n  }\n];\n\nconst getIcon = (iconName: string) => {\n  switch (iconName) {\n    case \"brain\":\n      return Brain;\n    case \"eye\":\n      return Eye;\n    case \"wand2\":\n      return Wand2;\n    default:\n      return Brain;\n  }\n};\n\nconst getStatusColor = (status: string) => {\n  switch (status) {\n    case \"FDA CLEARED\":\n      return \"bg-green-600\";\n    case \"CE MARKED\":\n      return \"bg-green-600\";\n    case \"BREAKTHROUGH\":\n      return \"bg-orange-600\";\n    default:\n      return \"bg-blue-600\";\n  }\n};\n\nexport function ProductShowcase() {\n  return (\n    <section id=\"products\" className=\"py-20 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          viewport={{ once: true }}\n        >\n          <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">\n            Revolutionary AI-Powered Solutions\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Our comprehensive suite of AI tools transforms medical imaging with unprecedented speed and accuracy\n          </p>\n        </motion.div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {products.map((product, index) => {\n            const IconComponent = getIcon(product.icon);\n            return (\n              <motion.div\n                key={product.id}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <Card className=\"hover-lift border-0 shadow-lg\">\n                  <CardContent className=\"p-8\">\n                    <div className=\"mb-6\">\n                      <img\n                        src={product.image}\n                        alt={product.title}\n                        className=\"w-full h-48 object-cover rounded-lg\"\n                      />\n                    </div>\n                    \n                    <div className=\"mb-4\">\n                      <div className=\"flex items-center mb-2\">\n                        <IconComponent className=\"text-[var(--medical-blue)] h-6 w-6 mr-3\" />\n                        <h3 className=\"text-2xl font-bold text-gray-900\">{product.name}</h3>\n                      </div>\n                      <Badge className={`${getStatusColor(product.status)} text-white`}>\n                        {product.status}\n                      </Badge>\n                    </div>\n                    \n                    <p className=\"text-gray-600 mb-6\">{product.description}</p>\n                    \n                    <div className=\"space-y-3 mb-6\">\n                      {product.features.map((feature, featureIndex) => (\n                        <div key={featureIndex} className=\"flex items-center text-sm text-gray-600\">\n                          <Check className=\"text-green-600 h-4 w-4 mr-2\" />\n                          <span>{feature}</span>\n                        </div>\n                      ))}\n                    </div>\n                    \n                    <Button className=\"w-full bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\">\n                      Learn More\n                    </Button>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            );\n          })}\n        </div>\n\n        <motion.div\n          className=\"text-center mt-12\"\n          initial={{ opacity: 0 }}\n          whileInView={{ opacity: 1 }}\n          transition={{ duration: 0.6, delay: 0.3 }}\n          viewport={{ once: true }}\n        >\n          <Button\n            size=\"lg\"\n            className=\"bg-[var(--medical-light)] hover:bg-[var(--medical-blue)]\"\n          >\n            View All Products\n          </Button>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5871},"client/src/components/search-dialog.tsx":{"content":"import { useState } from \"react\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Search, FileText, Video, Users, Building } from \"lucide-react\";\n\ninterface SearchDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n}\n\nconst searchResults = [\n  {\n    id: 1,\n    title: \"MedicareHD™ - AI-Enhanced MRI\",\n    description: \"Ultra-high definition MRI enhancement with 75% faster acquisition\",\n    type: \"product\",\n    icon: FileText,\n    url: \"/products#medicarehd\",\n  },\n  {\n    id: 2,\n    title: \"Clinical Validation Results\",\n    description: \"Comprehensive study of 1,000+ patients demonstrating effectiveness\",\n    type: \"research\",\n    icon: FileText,\n    url: \"/resources\",\n  },\n  {\n    id: 3,\n    title: \"AI in Radiology Webinar\",\n    description: \"Expert panel discussion on emerging AI trends\",\n    type: \"webinar\",\n    icon: Video,\n    url: \"/resources\",\n  },\n  {\n    id: 4,\n    title: \"Leadership Team\",\n    description: \"Meet our world-class team of medical AI experts\",\n    type: \"company\",\n    icon: Users,\n    url: \"/company#team\",\n  },\n  {\n    id: 5,\n    title: \"Stanford Case Study\",\n    description: \"60% reduction in scan time with improved patient satisfaction\",\n    type: \"case-study\",\n    icon: Building,\n    url: \"/resources\",\n  },\n];\n\nexport function SearchDialog({ open, onOpenChange }: SearchDialogProps) {\n  const [query, setQuery] = useState(\"\");\n\n  const filteredResults = query\n    ? searchResults.filter(\n        (result) =>\n          result.title.toLowerCase().includes(query.toLowerCase()) ||\n          result.description.toLowerCase().includes(query.toLowerCase())\n      )\n    : [];\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-2xl\">\n        <DialogHeader>\n          <DialogTitle>Search Medicare</DialogTitle>\n        </DialogHeader>\n        <div className=\"space-y-4\">\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <Input\n              placeholder=\"Search products, resources, research...\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              className=\"pl-10\"\n            />\n          </div>\n\n          {query && (\n            <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n              {filteredResults.length > 0 ? (\n                filteredResults.map((result) => {\n                  const IconComponent = result.icon;\n                  return (\n                    <div\n                      key={result.id}\n                      className=\"p-3 rounded-lg hover:bg-gray-50 cursor-pointer border border-gray-100\"\n                      onClick={() => {\n                        onOpenChange(false);\n                        // Navigate to result URL\n                        window.location.href = result.url;\n                      }}\n                    >\n                      <div className=\"flex items-start space-x-3\">\n                        <IconComponent className=\"h-5 w-5 text-[var(--medical-blue)] mt-0.5\" />\n                        <div className=\"flex-1\">\n                          <h3 className=\"font-medium text-gray-900\">{result.title}</h3>\n                          <p className=\"text-sm text-gray-600 mt-1\">{result.description}</p>\n                          <span className=\"inline-block mt-2 text-xs px-2 py-1 bg-gray-100 text-gray-600 rounded-full capitalize\">\n                            {result.type.replace(\"-\", \" \")}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })\n              ) : (\n                <div className=\"text-center py-8 text-gray-500\">\n                  <Search className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n                  <p>No results found for \"{query}\"</p>\n                </div>\n              )}\n            </div>\n          )}\n\n          {!query && (\n            <div className=\"text-center py-8 text-gray-500\">\n              <Search className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n              <p>Start typing to search products, resources, and more</p>\n            </div>\n          )}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","size_bytes":4380},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/types.ts":{"content":"export interface Product {\n  id: string;\n  name: string;\n  title: string;\n  description: string;\n  features: string[];\n  status: 'FDA CLEARED' | 'CE MARKED' | 'BREAKTHROUGH';\n  icon: string;\n  image: string;\n}\n\nexport interface CaseStudy {\n  id: string;\n  institution: string;\n  title: string;\n  description: string;\n  metrics: {\n    label: string;\n    value: string;\n    type: 'success' | 'info';\n  }[];\n  image: string;\n}\n\nexport interface Resource {\n  id: string;\n  title: string;\n  description: string;\n  type: 'RESEARCH PAPER' | 'WHITEPAPER' | 'CASE STUDY' | 'TECHNICAL' | 'WEBINAR';\n  date: string;\n  pages?: string;\n  publisher?: string;\n  category: 'research' | 'whitepapers' | 'case-studies' | 'technical' | 'webinar';\n}\n\nexport interface TeamMember {\n  id: string;\n  name: string;\n  title: string;\n  description: string;\n  image: string;\n}\n","size_bytes":850},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/company.tsx":{"content":"import { Navigation } from \"@/components/navigation\";\nimport { Footer } from \"@/components/footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Heart, \n  Lightbulb, \n  Shield, \n  Users, \n  Globe, \n  Award,\n  TrendingUp,\n  Building,\n  MapPin,\n  Mail,\n  ArrowRight\n} from \"lucide-react\";\nimport { motion } from \"framer-motion\";\nimport type { TeamMember } from \"@/lib/types\";\n\nconst teamMembers: TeamMember[] = [\n  {\n    id: \"sarah-chen\",\n    name: \"Dr. Sarah Chen\",\n    title: \"Chief Executive Officer\",\n    description: \"Former Stanford Radiology, 15+ years in medical AI. Led breakthrough research in deep learning applications for medical imaging.\",\n    image: \"https://images.unsplash.com/photo-1494790108755-2616b612b1c0?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\"\n  },\n  {\n    id: \"michael-rodriguez\", \n    name: \"Dr. Michael Rodriguez\",\n    title: \"Chief Technology Officer\",\n    description: \"PhD Computer Vision, Former Google AI Health. Pioneer in AI-powered medical image enhancement and synthetic imaging.\",\n    image: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\"\n  },\n  {\n    id: \"emily-thompson\",\n    name: \"Dr. Emily Thompson\", \n    title: \"Chief Medical Officer\",\n    description: \"Board-certified Radiologist, Mayo Clinic alumna. Expert in clinical validation and regulatory affairs for medical AI.\",\n    image: \"https://images.unsplash.com/photo-1559209172-e6eee67c1d4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\"\n  },\n  {\n    id: \"james-wilson\",\n    name: \"James Wilson\",\n    title: \"Chief Commercial Officer\", \n    description: \"Former Philips Healthcare, Global sales leader. 20+ years experience in medical device commercialization.\",\n    image: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\"\n  },\n  {\n    id: \"lisa-zhang\",\n    name: \"Dr. Lisa Zhang\",\n    title: \"VP of Research\",\n    description: \"MIT PhD, Former Facebook AI Research. Leading our next-generation AI algorithms and clinical research initiatives.\",\n    image: \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\"\n  },\n  {\n    id: \"david-kumar\",\n    name: \"David Kumar\",\n    title: \"VP of Engineering\",\n    description: \"Former Apple, Netflix engineering leader. Architect of our scalable AI platform and infrastructure systems.\",\n    image: \"https://images.unsplash.com/photo-1500648767791-00dcc994a43e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\"\n  }\n];\n\nconst companyValues = [\n  {\n    icon: Heart,\n    title: \"Patient First\",\n    description: \"Every decision we make prioritizes patient safety, comfort, and care quality. We measure success by the positive impact on patient outcomes.\"\n  },\n  {\n    icon: Lightbulb,\n    title: \"Innovation\",\n    description: \"We push the boundaries of what's possible in medical imaging through cutting-edge AI research and development.\"\n  },\n  {\n    icon: Shield,\n    title: \"Trust & Reliability\",\n    description: \"We build transparent, reliable solutions that healthcare professionals can depend on for critical diagnostic decisions.\"\n  },\n  {\n    icon: Users,\n    title: \"Collaboration\",\n    description: \"We work closely with clinicians, researchers, and partners to ensure our solutions meet real-world healthcare needs.\"\n  }\n];\n\nconst milestones = [\n  {\n    year: \"2019\",\n    title: \"Company Founded\",\n    description: \"Medicare spun out from Stanford University with breakthrough AI imaging research.\"\n  },\n  {\n    year: \"2020\", \n    title: \"First FDA Clearance\",\n    description: \"MedicareHD™ receives FDA 510(k) clearance for MRI enhancement.\"\n  },\n  {\n    year: \"2021\",\n    title: \"Global Expansion\", \n    description: \"Deployed across 50+ hospitals in North America and Europe.\"\n  },\n  {\n    year: \"2022\",\n    title: \"PET Innovation\",\n    description: \"MedicarePET™ receives CE mark, enabling 75% dose reduction.\"\n  },\n  {\n    year: \"2023\",\n    title: \"Synthetic Breakthrough\",\n    description: \"Industry-first synthetic imaging technology with MedicareSYNTH™.\"\n  },\n  {\n    year: \"2024\",\n    title: \"500+ Installations\",\n    description: \"Reached milestone of 500+ hospital installations worldwide.\"\n  }\n];\n\nconst stats = [\n  { number: \"500+\", label: \"Hospitals Served\", icon: Building },\n  { number: \"25M+\", label: \"Patients Impacted\", icon: Users },\n  { number: \"50+\", label: \"Countries\", icon: Globe },\n  { number: \"98%\", label: \"Satisfaction Rate\", icon: Award }\n];\n\nexport default function Company() {\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-16 bg-gradient-to-br from-blue-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center max-w-4xl mx-auto\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <h1 className=\"text-5xl font-bold text-gray-900 mb-6\">\n              Leading the Future of Medical AI\n            </h1>\n            <p className=\"text-xl text-gray-600 mb-8\">\n              Born from Stanford's cutting-edge research, Medicare is transforming healthcare through \n              innovative AI solutions that make medical imaging faster, safer, and more accessible worldwide.\n            </p>\n            <Button \n              size=\"lg\"\n              className=\"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\"\n              onClick={() => document.getElementById('mission')?.scrollIntoView({ behavior: 'smooth' })}\n            >\n              Learn Our Story\n              <ArrowRight className=\"ml-2 h-4 w-4\" />\n            </Button>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Company Stats */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8\">\n            {stats.map((stat, index) => {\n              const IconComponent = stat.icon;\n              \n              return (\n                <motion.div\n                  key={stat.label}\n                  className=\"text-center\"\n                  initial={{ opacity: 0, y: 30 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                >\n                  <div className=\"bg-[var(--medical-blue)] p-4 rounded-full inline-flex mb-4\">\n                    <IconComponent className=\"text-white h-6 w-6\" />\n                  </div>\n                  <div className=\"text-4xl font-bold text-[var(--medical-blue)] mb-2\">\n                    {stat.number}\n                  </div>\n                  <div className=\"text-gray-600\">{stat.label}</div>\n                </motion.div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Mission & Vision */}\n      <section id=\"mission\" className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Our Mission & Vision</h2>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-12\">\n            <motion.div\n              initial={{ opacity: 0, x: -30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"border-0 shadow-lg h-full\">\n                <CardContent className=\"p-8\">\n                  <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">Our Mission</h3>\n                  <p className=\"text-gray-600 text-lg leading-relaxed\">\n                    To democratize access to high-quality medical imaging by developing AI solutions \n                    that make advanced diagnostic capabilities available to healthcare providers worldwide, \n                    regardless of their size or location. We believe every patient deserves the best \n                    possible diagnostic care.\n                  </p>\n                </CardContent>\n              </Card>\n            </motion.div>\n            \n            <motion.div\n              initial={{ opacity: 0, x: 30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              <Card className=\"border-0 shadow-lg h-full\">\n                <CardContent className=\"p-8\">\n                  <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">Our Vision</h3>\n                  <p className=\"text-gray-600 text-lg leading-relaxed\">\n                    A world where AI-enhanced medical imaging is the standard of care, enabling \n                    faster diagnoses, improved patient outcomes, and more efficient healthcare delivery. \n                    We envision a future where technology amplifies human expertise rather than replacing it.\n                  </p>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Company Values */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Our Core Values</h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              These principles guide every decision we make and every solution we develop.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {companyValues.map((value, index) => {\n              const IconComponent = value.icon;\n              \n              return (\n                <motion.div\n                  key={value.title}\n                  initial={{ opacity: 0, y: 30 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                >\n                  <Card className=\"text-center border-0 shadow-lg hover-lift h-full\">\n                    <CardContent className=\"p-8\">\n                      <div className=\"bg-[var(--medical-blue)] p-4 rounded-full inline-flex mb-6\">\n                        <IconComponent className=\"text-white h-6 w-6\" />\n                      </div>\n                      <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{value.title}</h3>\n                      <p className=\"text-gray-600\">{value.description}</p>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Leadership Team */}\n      <section id=\"team\" className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Leadership Team</h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Our world-class team combines deep medical expertise with cutting-edge AI research \n              to drive innovation in healthcare imaging.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {teamMembers.map((member, index) => (\n              <motion.div\n                key={member.id}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <Card className=\"border-0 shadow-lg hover-lift\">\n                  <CardContent className=\"p-8 text-center\">\n                    <img\n                      src={member.image}\n                      alt={member.name}\n                      className=\"w-32 h-32 rounded-full mx-auto mb-6 object-cover\"\n                    />\n                    <h3 className=\"text-xl font-bold text-gray-900 mb-2\">{member.name}</h3>\n                    <div className=\"text-[var(--medical-blue)] font-medium mb-4\">{member.title}</div>\n                    <p className=\"text-gray-600 text-sm leading-relaxed\">{member.description}</p>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Company Timeline */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">Our Journey</h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              From university research to global healthcare transformation - key milestones in our mission \n              to advance medical AI.\n            </p>\n          </motion.div>\n\n          <div className=\"relative\">\n            {/* Timeline line */}\n            <div className=\"absolute left-1/2 transform -translate-x-1/2 w-1 h-full bg-[var(--medical-blue)] opacity-20\"></div>\n            \n            <div className=\"space-y-12\">\n              {milestones.map((milestone, index) => (\n                <motion.div\n                  key={milestone.year}\n                  className={`flex items-center ${index % 2 === 0 ? 'flex-row' : 'flex-row-reverse'}`}\n                  initial={{ opacity: 0, x: index % 2 === 0 ? -50 : 50 }}\n                  whileInView={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                >\n                  <div className={`w-1/2 ${index % 2 === 0 ? 'pr-8 text-right' : 'pl-8'}`}>\n                    <Card className=\"border-0 shadow-lg\">\n                      <CardContent className=\"p-6\">\n                        <Badge className=\"bg-[var(--medical-blue)] text-white mb-3\">\n                          {milestone.year}\n                        </Badge>\n                        <h3 className=\"text-xl font-bold text-gray-900 mb-2\">\n                          {milestone.title}\n                        </h3>\n                        <p className=\"text-gray-600\">{milestone.description}</p>\n                      </CardContent>\n                    </Card>\n                  </div>\n                  \n                  {/* Timeline node */}\n                  <div className=\"relative z-10\">\n                    <div className=\"w-6 h-6 bg-[var(--medical-blue)] rounded-full border-4 border-white shadow-lg\"></div>\n                  </div>\n                  \n                  <div className=\"w-1/2\"></div>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Careers CTA */}\n      <section className=\"py-20 bg-[var(--medical-blue)]\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-white mb-6\">Join Our Mission</h2>\n            <p className=\"text-xl text-blue-100 mb-8\">\n              We're always looking for talented individuals who share our passion for transforming \n              healthcare through AI innovation. Join our team and help shape the future of medical imaging.\n            </p>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n              <div className=\"text-center\">\n                <MapPin className=\"text-white h-8 w-8 mx-auto mb-2\" />\n                <div className=\"text-white font-medium\">Global Remote</div>\n                <div className=\"text-blue-100 text-sm\">Work from anywhere</div>\n              </div>\n              <div className=\"text-center\">\n                <TrendingUp className=\"text-white h-8 w-8 mx-auto mb-2\" />\n                <div className=\"text-white font-medium\">Growth Opportunities</div>\n                <div className=\"text-blue-100 text-sm\">Advance your career</div>\n              </div>\n              <div className=\"text-center\">\n                <Heart className=\"text-white h-8 w-8 mx-auto mb-2\" />\n                <div className=\"text-white font-medium\">Meaningful Impact</div>\n                <div className=\"text-blue-100 text-sm\">Help save lives</div>\n              </div>\n            </div>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button \n                size=\"lg\"\n                className=\"bg-white text-[var(--medical-blue)] hover:bg-gray-100\"\n              >\n                View Open Positions\n              </Button>\n              <Button \n                size=\"lg\" \n                variant=\"outline\"\n                className=\"border-white text-white hover:bg-white hover:text-[var(--medical-blue)]\"\n              >\n                <Mail className=\"mr-2 h-4 w-4\" />\n                Contact HR\n              </Button>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":18494},"client/src/pages/home.tsx":{"content":"import { Navigation } from \"@/components/navigation\";\nimport { Hero } from \"@/components/hero\";\nimport { ProductShowcase } from \"@/components/product-showcase\";\nimport { DemoBooking } from \"@/components/demo-booking\";\nimport { CaseStudies } from \"@/components/case-studies\";\nimport { Newsletter } from \"@/components/newsletter\";\nimport { Footer } from \"@/components/footer\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { motion } from \"framer-motion\";\n\n// Trusted Partners Section\nfunction TrustedPartners() {\n  const partners = [\n    \"Stanford Health\",\n    \"Mayo Clinic\", \n    \"Johns Hopkins\",\n    \"Cleveland Clinic\",\n    \"Mass General\",\n    \"UCSF Health\"\n  ];\n\n  return (\n    <section className=\"bg-white py-16\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          className=\"text-center mb-12\"\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          viewport={{ once: true }}\n        >\n          <h2 className=\"text-gray-600 text-lg font-medium mb-8\">\n            Trusted by Leading Healthcare Institutions\n          </h2>\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-6 items-center\">\n            {partners.map((partner, index) => (\n              <motion.div\n                key={partner}\n                className=\"flex justify-center items-center h-16 bg-gray-50 rounded-lg border\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <span className=\"text-gray-600 font-medium text-sm text-center px-2\">\n                  {partner}\n                </span>\n              </motion.div>\n            ))}\n          </div>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n\n// Company Stats Section\nfunction CompanyStats() {\n  const stats = [\n    { number: \"500+\", label: \"Hospitals Served\" },\n    { number: \"25M+\", label: \"Patients Impacted\" },  \n    { number: \"50+\", label: \"Countries\" },\n    { number: \"98%\", label: \"Satisfaction Rate\" }\n  ];\n\n  return (\n    <section className=\"py-20 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          viewport={{ once: true }}\n        >\n          <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">\n            Leading the Future of Medical AI\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-4xl mx-auto\">\n            Born from Stanford's cutting-edge research, Medicare is transforming healthcare through \n            innovative AI solutions that make medical imaging faster, safer, and more accessible worldwide.\n          </p>\n        </motion.div>\n\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8\">\n          {stats.map((stat, index) => (\n            <motion.div\n              key={stat.label}\n              className=\"text-center\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: index * 0.1 }}\n              viewport={{ once: true }}\n            >\n              <div className=\"text-4xl font-bold text-[var(--medical-blue)] mb-2\">\n                {stat.number}\n              </div>\n              <div className=\"text-gray-600\">{stat.label}</div>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default function Home() {\n  return (\n    <div className=\"min-h-screen\">\n      <Navigation />\n      <Hero />\n      <TrustedPartners />\n      <ProductShowcase />\n      <DemoBooking />\n      <CaseStudies />\n      <CompanyStats />\n      <Newsletter />\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":3984},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/products.tsx":{"content":"import { Navigation } from \"@/components/navigation\";\nimport { Footer } from \"@/components/footer\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Check, Brain, Eye, Wand2, AlignLeft, ArrowRight } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\n\nconst products = [\n  {\n    id: \"medicarehd\",\n    name: \"MedicareHD™\",\n    title: \"Ultra-High Definition MRI Enhancement\",\n    description: \"Advanced denoising and sharpening technology that delivers superior image quality in 75% less time.\",\n    fullDescription: \"MedicareHD™ represents a breakthrough in MRI enhancement technology, utilizing deep learning algorithms to dramatically improve image quality while reducing scan times. Our proprietary AI models have been trained on millions of medical images to deliver consistent, reliable results across all body regions and MRI sequences.\",\n    features: [\n      \"Up to 75% faster acquisition times\",\n      \"Enhanced image clarity and sharpness\", \n      \"Compatible with all body regions\",\n      \"Works with T1, T2, T2 FLAIR sequences\",\n      \"Vendor-neutral compatibility\",\n      \"Real-time processing\"\n    ],\n    benefits: [\n      \"Increased patient throughput\",\n      \"Reduced patient discomfort\",\n      \"Improved diagnostic confidence\",\n      \"Lower operating costs\"\n    ],\n    status: \"FDA CLEARED\",\n    icon: Brain,\n    color: \"blue\",\n    image: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"\n  },\n  {\n    id: \"medicarepet\", \n    name: \"MedicarePET™\",\n    title: \"AI-Enhanced PET Imaging\",\n    description: \"Revolutionary PET enhancement that reduces radiation dose by up to 75% while maintaining diagnostic quality.\",\n    fullDescription: \"MedicarePET™ transforms PET imaging by enabling significant dose reduction without compromising image quality. Our AI algorithms enhance low-count PET data, allowing for faster scans or lower tracer doses while maintaining the diagnostic accuracy physicians require.\",\n    features: [\n      \"Up to 75% radiation dose reduction\",\n      \"4x scan time acceleration\", \n      \"Multiple radiotracer support\",\n      \"Noise reduction algorithms\",\n      \"Quantitative accuracy preservation\",\n      \"Seamless workflow integration\"\n    ],\n    benefits: [\n      \"Improved patient safety\",\n      \"Faster scan completion\",\n      \"Reduced waiting times\", \n      \"Cost-effective imaging\"\n    ],\n    status: \"CE MARKED\",\n    icon: Eye,\n    color: \"green\",\n    image: \"https://images.unsplash.com/photo-1576086213369-97a306d36557?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"\n  },\n  {\n    id: \"medicaresynth\",\n    name: \"MedicareSYNTH™\", \n    title: \"Synthetic Imaging Technology\",\n    description: \"Industry-first synthetic imaging software that generates high-quality images in zero acquisition time.\",\n    fullDescription: \"MedicareSYNTH™ represents a paradigm shift in medical imaging, using AI to generate synthetic images that would traditionally require separate scan sequences. This breakthrough technology can produce STIR images instantly from existing T1 and T2 data.\",\n    features: [\n      \"Zero-minute acquisition time\",\n      \"Synthetic STIR image generation\",\n      \"100% scan time acceleration\",\n      \"Consistent image quality\",\n      \"No additional contrast required\",\n      \"Automated processing\"\n    ],\n    benefits: [\n      \"Elimination of additional scans\",\n      \"Significant time savings\",\n      \"Improved workflow efficiency\",\n      \"Enhanced patient experience\"\n    ],\n    status: \"BREAKTHROUGH\",\n    icon: Wand2,\n    color: \"orange\", \n    image: \"https://images.unsplash.com/photo-1551601651-2a8555f1a136?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"\n  },\n  {\n    id: \"medicarealign\",\n    name: \"MedicareALIGN™\",\n    title: \"Automated Brain Alignment\",\n    description: \"Precision brain MR alignment to ideal anatomical position with 97%+ accuracy.\",\n    fullDescription: \"MedicareALIGN™ automatically aligns brain MR images to standardized anatomical positions, reducing variability across longitudinal studies and improving diagnostic consistency. This tool is essential for research protocols and comparative studies.\",\n    features: [\n      \"97%+ alignment accuracy\",\n      \"Automated processing\",\n      \"3D brain sequence support\", \n      \"Orthogonal reformats\",\n      \"Longitudinal study optimization\",\n      \"Research protocol compliance\"\n    ],\n    benefits: [\n      \"Improved diagnostic consistency\", \n      \"Reduced manual work\",\n      \"Enhanced research reliability\",\n      \"Standardized positioning\"\n    ],\n    status: \"FDA CLEARED\",\n    icon: AlignLeft,\n    color: \"purple\",\n    image: \"https://images.unsplash.com/photo-1559757175-0eb30cd8c063?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"\n  }\n];\n\nconst getStatusColor = (status: string) => {\n  switch (status) {\n    case \"FDA CLEARED\":\n      return \"bg-green-600\";\n    case \"CE MARKED\": \n      return \"bg-green-600\";\n    case \"BREAKTHROUGH\":\n      return \"bg-orange-600\";\n    default:\n      return \"bg-blue-600\";\n  }\n};\n\nexport default function Products() {\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-16 bg-gradient-to-br from-blue-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center max-w-4xl mx-auto\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <h1 className=\"text-5xl font-bold text-gray-900 mb-6\">\n              AI-Powered Medical Imaging Solutions\n            </h1>\n            <p className=\"text-xl text-gray-600 mb-8\">\n              Discover our comprehensive suite of FDA-cleared AI tools that transform medical imaging \n              with unprecedented speed, quality, and efficiency.\n            </p>\n            <Button \n              size=\"lg\"\n              className=\"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\"\n              onClick={() => document.getElementById('products')?.scrollIntoView({ behavior: 'smooth' })}\n            >\n              Explore Products\n              <ArrowRight className=\"ml-2 h-4 w-4\" />\n            </Button>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Products Section */}\n      <section id=\"products\" className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"space-y-20\">\n            {products.map((product, index) => {\n              const IconComponent = product.icon;\n              const isEven = index % 2 === 0;\n              \n              return (\n                <motion.div\n                  key={product.id}\n                  id={product.id}\n                  className={`grid grid-cols-1 lg:grid-cols-2 gap-12 items-center ${\n                    !isEven ? 'lg:flex-row-reverse' : ''\n                  }`}\n                  initial={{ opacity: 0, y: 50 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.8 }}\n                  viewport={{ once: true }}\n                >\n                  {/* Content */}\n                  <div className={isEven ? 'lg:pr-8' : 'lg:pl-8 lg:order-2'}>\n                    <div className=\"flex items-center mb-4\">\n                      <IconComponent className=\"text-[var(--medical-blue)] h-8 w-8 mr-3\" />\n                      <h2 className=\"text-3xl font-bold text-gray-900\">{product.name}</h2>\n                    </div>\n                    \n                    <Badge className={`${getStatusColor(product.status)} text-white mb-4`}>\n                      {product.status}\n                    </Badge>\n                    \n                    <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">\n                      {product.title}\n                    </h3>\n                    \n                    <p className=\"text-gray-600 mb-6 text-lg leading-relaxed\">\n                      {product.fullDescription}\n                    </p>\n\n                    <Tabs defaultValue=\"features\" className=\"mb-8\">\n                      <TabsList className=\"grid w-full grid-cols-2\">\n                        <TabsTrigger value=\"features\">Features</TabsTrigger>\n                        <TabsTrigger value=\"benefits\">Benefits</TabsTrigger>\n                      </TabsList>\n                      \n                      <TabsContent value=\"features\" className=\"mt-6\">\n                        <div className=\"space-y-3\">\n                          {product.features.map((feature, featureIndex) => (\n                            <div key={featureIndex} className=\"flex items-start\">\n                              <Check className=\"text-green-600 h-5 w-5 mr-3 mt-0.5 flex-shrink-0\" />\n                              <span className=\"text-gray-700\">{feature}</span>\n                            </div>\n                          ))}\n                        </div>\n                      </TabsContent>\n                      \n                      <TabsContent value=\"benefits\" className=\"mt-6\">\n                        <div className=\"space-y-3\">\n                          {product.benefits.map((benefit, benefitIndex) => (\n                            <div key={benefitIndex} className=\"flex items-start\">\n                              <Check className=\"text-blue-600 h-5 w-5 mr-3 mt-0.5 flex-shrink-0\" />\n                              <span className=\"text-gray-700\">{benefit}</span>\n                            </div>\n                          ))}\n                        </div>\n                      </TabsContent>\n                    </Tabs>\n\n                    <div className=\"flex flex-col sm:flex-row gap-4\">\n                      <Button \n                        className=\"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\"\n                        onClick={() => document.getElementById('demo')?.scrollIntoView({ behavior: 'smooth' })}\n                      >\n                        Request Demo\n                      </Button>\n                      <Button variant=\"outline\">\n                        Download Spec Sheet\n                      </Button>\n                    </div>\n                  </div>\n\n                  {/* Image */}\n                  <div className={`${!isEven ? 'lg:order-1' : ''}`}>\n                    <Card className=\"overflow-hidden shadow-xl border-0\">\n                      <CardContent className=\"p-0\">\n                        <img\n                          src={product.image}\n                          alt={product.title}\n                          className=\"w-full h-80 object-cover\"\n                        />\n                      </CardContent>\n                    </Card>\n                  </div>\n                </motion.div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">\n              Ready to Transform Your Medical Imaging?\n            </h2>\n            <p className=\"text-xl text-gray-600 mb-8\">\n              Join hundreds of healthcare institutions already using our AI solutions to improve patient care.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button \n                size=\"lg\"\n                className=\"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\"\n              >\n                Schedule Consultation\n              </Button>\n              <Button size=\"lg\" variant=\"outline\">\n                Compare Products\n              </Button>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":12262},"client/src/pages/research.tsx":{"content":"import { Navigation } from \"@/components/navigation\";\nimport { Footer } from \"@/components/footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { \n  FileText, \n  Download, \n  ExternalLink, \n  Search,\n  Users,\n  Award,\n  BookOpen,\n  TrendingUp\n} from \"lucide-react\";\nimport { motion } from \"framer-motion\";\nimport { useState } from \"react\";\n\nconst publications = [\n  {\n    id: 1,\n    title: \"Deep Learning Enhancement of Low-Count PET Imaging: A Multi-Site Clinical Validation\",\n    authors: \"Chen, S., Rodriguez, M., Thompson, E., et al.\",\n    journal: \"Nature Medicine\",\n    year: \"2024\",\n    type: \"peer-reviewed\",\n    category: \"Clinical Study\",\n    abstract: \"This multi-center study demonstrates the clinical efficacy of AI-enhanced PET imaging across 15 medical institutions, showing consistent 75% dose reduction while maintaining diagnostic accuracy.\",\n    citations: 142,\n    impact: \"High Impact\",\n    downloadUrl: \"#\"\n  },\n  {\n    id: 2,\n    title: \"Synthetic STIR Imaging: Zero-Acquisition Time MRI Sequences Using Deep Neural Networks\",\n    authors: \"Thompson, E., Wilson, J., Chen, S., Rodriguez, M.\",\n    journal: \"Radiology\",\n    year: \"2024\", \n    type: \"peer-reviewed\",\n    category: \"Technical Innovation\",\n    abstract: \"First demonstration of synthetic STIR image generation from standard T1 and T2 sequences, eliminating the need for additional scan time while maintaining diagnostic quality.\",\n    citations: 89,\n    impact: \"Breakthrough\",\n    downloadUrl: \"#\"\n  },\n  {\n    id: 3,\n    title: \"AI-Accelerated MRI: A Comprehensive Analysis of Time Savings and Clinical Outcomes\",\n    authors: \"Rodriguez, M., Chen, S., Johnson, K., et al.\",\n    journal: \"Journal of Medical Imaging\",\n    year: \"2024\",\n    type: \"peer-reviewed\", \n    category: \"Clinical Outcomes\",\n    abstract: \"Comprehensive analysis of 50,000+ MRI scans enhanced with AI technology, demonstrating significant time savings without compromising diagnostic accuracy.\",\n    citations: 156,\n    impact: \"High Impact\",\n    downloadUrl: \"#\"\n  },\n  {\n    id: 4,\n    title: \"Economic Impact of AI-Enhanced Medical Imaging: A Healthcare System Perspective\",\n    authors: \"Wilson, J., Thompson, E., Davis, R.\",\n    journal: \"Health Economics Review\",\n    year: \"2023\",\n    type: \"peer-reviewed\",\n    category: \"Health Economics\", \n    abstract: \"Analysis of cost savings and operational improvements from AI implementation across major healthcare systems, showing average ROI of 340% within 18 months.\",\n    citations: 73,\n    impact: \"Significant\",\n    downloadUrl: \"#\"\n  },\n  {\n    id: 5,\n    title: \"Patient Safety and Comfort in AI-Accelerated Magnetic Resonance Imaging\",\n    authors: \"Davis, R., Chen, S., Brown, L., et al.\",\n    journal: \"Patient Safety Journal\",\n    year: \"2023\",\n    type: \"peer-reviewed\",\n    category: \"Patient Safety\",\n    abstract: \"Comprehensive study of patient experiences and safety outcomes in AI-enhanced MRI procedures, showing 40% improvement in patient comfort scores.\",\n    citations: 62,\n    impact: \"Moderate\",\n    downloadUrl: \"#\"\n  },\n  {\n    id: 6,\n    title: \"Automated Brain Alignment for Longitudinal MRI Studies: Clinical Validation and Research Applications\",\n    authors: \"Johnson, K., Rodriguez, M., Thompson, E.\",\n    journal: \"NeuroImage\",\n    year: \"2023\",\n    type: \"peer-reviewed\",\n    category: \"Neuroimaging\",\n    abstract: \"Validation study of automated brain alignment technology showing 97%+ accuracy in positioning across longitudinal studies, significantly improving research reliability.\",\n    citations: 91,\n    impact: \"High Impact\",\n    downloadUrl: \"#\"\n  }\n];\n\nconst researchStats = [\n  {\n    icon: FileText,\n    number: \"50+\",\n    label: \"Published Papers\",\n    description: \"Peer-reviewed publications in top medical journals\"\n  },\n  {\n    icon: Users,\n    number: \"200+\",\n    label: \"Research Partners\",\n    description: \"Academic institutions and healthcare centers\"\n  },\n  {\n    icon: Award,\n    number: \"15\",\n    label: \"Awards Won\",\n    description: \"International recognition for innovation\"\n  },\n  {\n    icon: TrendingUp,\n    number: \"2,500+\",\n    label: \"Citations\",\n    description: \"Total citations across all publications\"\n  }\n];\n\nexport default function Research() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\n\n  const categories = [\"All\", \"Clinical Study\", \"Technical Innovation\", \"Clinical Outcomes\", \"Health Economics\", \"Patient Safety\", \"Neuroimaging\"];\n\n  const filteredPublications = publications\n    .filter(pub => selectedCategory === \"All\" || pub.category === selectedCategory)\n    .filter(pub => \n      searchQuery === \"\" || \n      pub.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      pub.authors.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      pub.abstract.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n  const getImpactColor = (impact: string) => {\n    switch (impact) {\n      case \"High Impact\":\n        return \"bg-red-100 text-red-800\";\n      case \"Breakthrough\":\n        return \"bg-purple-100 text-purple-800\";\n      case \"Significant\":\n        return \"bg-blue-100 text-blue-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-16 bg-gradient-to-br from-blue-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center max-w-4xl mx-auto\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <h1 className=\"text-5xl font-bold text-gray-900 mb-6\">\n              Research & Publications\n            </h1>\n            <p className=\"text-xl text-gray-600 mb-8\">\n              Advancing medical AI through rigorous research and clinical validation. \n              Explore our peer-reviewed publications and groundbreaking studies.\n            </p>\n            <Button \n              size=\"lg\"\n              className=\"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\"\n              onClick={() => document.getElementById('publications')?.scrollIntoView({ behavior: 'smooth' })}\n            >\n              Explore Publications\n            </Button>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Research Stats */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {researchStats.map((stat, index) => {\n              const IconComponent = stat.icon;\n              \n              return (\n                <motion.div\n                  key={stat.label}\n                  className=\"text-center\"\n                  initial={{ opacity: 0, y: 30 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                >\n                  <div className=\"bg-[var(--medical-blue)] p-4 rounded-full inline-flex mb-4\">\n                    <IconComponent className=\"text-white h-6 w-6\" />\n                  </div>\n                  <div className=\"text-3xl font-bold text-gray-900 mb-2\">\n                    {stat.number}\n                  </div>\n                  <div className=\"text-lg font-semibold text-gray-900 mb-2\">\n                    {stat.label}\n                  </div>\n                  <div className=\"text-gray-600 text-sm\">\n                    {stat.description}\n                  </div>\n                </motion.div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Search and Filter */}\n      <section id=\"publications\" className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center mb-12\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">\n              Scientific Publications\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n              Our research is published in leading medical journals and contributes to the advancement \n              of AI in healthcare globally.\n            </p>\n\n            {/* Search Bar */}\n            <div className=\"max-w-2xl mx-auto mb-8\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                <Input\n                  placeholder=\"Search publications, authors, or keywords...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"pl-12 h-12 text-lg\"\n                />\n              </div>\n            </div>\n\n            {/* Category Filter */}\n            <div className=\"flex flex-wrap justify-center gap-3\">\n              {categories.map((category) => (\n                <Button\n                  key={category}\n                  variant={selectedCategory === category ? \"default\" : \"outline\"}\n                  onClick={() => setSelectedCategory(category)}\n                  className={selectedCategory === category ? \n                    \"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\" : \n                    \"\"}\n                >\n                  {category}\n                </Button>\n              ))}\n            </div>\n          </motion.div>\n\n          {/* Publications Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {filteredPublications.map((publication, index) => (\n              <motion.div\n                key={publication.id}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <Card className=\"hover-lift border-0 shadow-lg h-full\">\n                  <CardContent className=\"p-8\">\n                    <div className=\"flex justify-between items-start mb-4\">\n                      <Badge className={getImpactColor(publication.impact)}>\n                        {publication.impact}\n                      </Badge>\n                      <div className=\"text-sm text-gray-500\">\n                        {publication.year}\n                      </div>\n                    </div>\n                    \n                    <h3 className=\"text-xl font-bold text-gray-900 mb-3 line-clamp-2\">\n                      {publication.title}\n                    </h3>\n                    \n                    <div className=\"text-gray-600 mb-3\">\n                      <strong>Authors:</strong> {publication.authors}\n                    </div>\n                    \n                    <div className=\"text-gray-600 mb-3\">\n                      <strong>Published in:</strong> {publication.journal}\n                    </div>\n                    \n                    <Badge variant=\"outline\" className=\"mb-4\">\n                      {publication.category}\n                    </Badge>\n                    \n                    <p className=\"text-gray-700 mb-6 line-clamp-3\">\n                      {publication.abstract}\n                    </p>\n                    \n                    <div className=\"flex items-center justify-between mb-6\">\n                      <div className=\"text-sm text-gray-600\">\n                        <strong>{publication.citations}</strong> citations\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex gap-3\">\n                      <Button \n                        size=\"sm\"\n                        className=\"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)] flex-1\"\n                      >\n                        <Download className=\"mr-2 h-4 w-4\" />\n                        Download PDF\n                      </Button>\n                      <Button size=\"sm\" variant=\"outline\">\n                        <ExternalLink className=\"mr-2 h-4 w-4\" />\n                        View Journal\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n\n          {filteredPublications.length === 0 && (\n            <div className=\"text-center py-12\">\n              <BookOpen className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                No publications found\n              </h3>\n              <p className=\"text-gray-600\">\n                Try adjusting your search criteria or category filter.\n              </p>\n            </div>\n          )}\n        </div>\n      </section>\n\n      {/* Research Partnership CTA */}\n      <section className=\"py-20 bg-[var(--medical-blue)]\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-white mb-6\">\n              Collaborate with Our Research Team\n            </h2>\n            <p className=\"text-xl text-blue-100 mb-8\">\n              Join our network of research partners and contribute to advancing AI in medical imaging. \n              We support collaborative studies and provide research grants.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button \n                size=\"lg\"\n                className=\"bg-white text-[var(--medical-blue)] hover:bg-gray-100\"\n              >\n                Partner with Us\n              </Button>\n              <Button \n                size=\"lg\" \n                variant=\"outline\"\n                className=\"border-white text-white hover:bg-white hover:text-[var(--medical-blue)]\"\n              >\n                Apply for Research Grant\n              </Button>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":14725},"client/src/pages/resources.tsx":{"content":"import { Navigation } from \"@/components/navigation\";\nimport { Footer } from \"@/components/footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { \n  Search, \n  Download, \n  ExternalLink, \n  FileText, \n  Video, \n  Presentation,\n  Book,\n  PlayCircle,\n  Calendar,\n  Filter,\n  ArrowRight\n} from \"lucide-react\";\nimport { motion } from \"framer-motion\";\nimport { useState } from \"react\";\nimport type { Resource } from \"@/lib/types\";\n\nconst resources: Resource[] = [\n  {\n    id: \"clinical-validation-2024\",\n    title: \"AI-Enhanced MRI: Clinical Validation Results\",\n    description: \"Comprehensive study of 1,000+ patients demonstrating 75% reduction in scan times with maintained diagnostic accuracy across multiple anatomical regions.\",\n    type: \"RESEARCH PAPER\",\n    date: \"December 2023\",\n    pages: \"24 pages\",\n    publisher: \"Nature Medicine\",\n    category: \"research\"\n  },\n  {\n    id: \"roi-calculator-whitepaper\",\n    title: \"ROI Calculator: AI in Medical Imaging\",\n    description: \"Detailed analysis of cost savings and efficiency gains from implementing AI-powered imaging solutions, including real-world case studies and financial models.\",\n    type: \"WHITEPAPER\", \n    date: \"November 2023\",\n    pages: \"14 pages\",\n    publisher: \"Medicare Research\",\n    category: \"whitepapers\"\n  },\n  {\n    id: \"stanford-case-study\",\n    title: \"Stanford Medical: Implementation Success\",\n    description: \"How Stanford Medical Center achieved 60% faster MRI scans while improving patient satisfaction scores and reducing operational costs.\",\n    type: \"CASE STUDY\",\n    date: \"October 2023\", \n    pages: \"8 pages\",\n    publisher: \"Medicare Case Studies\",\n    category: \"case-studies\"\n  },\n  {\n    id: \"pacs-integration-guide\",\n    title: \"Integration Guide: PACS Systems\",\n    description: \"Technical documentation for seamless integration with existing PACS and imaging workflows, including step-by-step implementation instructions.\",\n    type: \"TECHNICAL\",\n    date: \"September 2023\",\n    pages: \"25 pages\", \n    publisher: \"Medicare Technical Docs\",\n    category: \"technical\"\n  },\n  {\n    id: \"future-ai-radiology-webinar\",\n    title: \"Future of AI in Radiology\",\n    description: \"Expert panel discussion on emerging trends and technologies in AI-powered medical imaging, featuring leading radiologists and AI researchers.\",\n    type: \"WEBINAR\",\n    date: \"August 2023\",\n    pages: \"60 min\",\n    publisher: \"Medicare Education\",\n    category: \"webinar\"\n  },\n  {\n    id: \"synthetic-imaging-breakthrough\",\n    title: \"Synthetic Imaging: Breakthrough Study\",\n    description: \"First clinical study demonstrating zero-acquisition-time synthetic STIR imaging with maintained diagnostic quality and clinical utility.\",\n    type: \"RESEARCH PAPER\",\n    date: \"July 2023\",\n    pages: \"18 pages\",\n    publisher: \"Radiology Journal\",\n    category: \"research\"\n  },\n  {\n    id: \"pet-dose-reduction-study\",\n    title: \"PET Dose Reduction: Multi-Center Analysis\",\n    description: \"Comprehensive analysis of radiation dose reduction capabilities across 50+ medical centers, demonstrating consistent 75% dose savings.\",\n    type: \"RESEARCH PAPER\", \n    date: \"June 2023\",\n    pages: \"22 pages\",\n    publisher: \"Journal of Nuclear Medicine\",\n    category: \"research\"\n  },\n  {\n    id: \"healthcare-ai-implementation\",\n    title: \"Healthcare AI Implementation Best Practices\",\n    description: \"Strategic guide for healthcare administrators on successfully implementing AI technologies, including change management and training protocols.\",\n    type: \"WHITEPAPER\",\n    date: \"May 2023\",\n    pages: \"16 pages\",\n    publisher: \"Medicare Strategy\",\n    category: \"whitepapers\"\n  },\n  {\n    id: \"mayo-clinic-deployment\",\n    title: \"Mayo Clinic: Enterprise Deployment\",\n    description: \"Detailed case study of enterprise-wide AI implementation across Mayo Clinic's imaging network, covering technical and operational aspects.\",\n    type: \"CASE STUDY\",\n    date: \"April 2023\",\n    pages: \"12 pages\", \n    publisher: \"Medicare Case Studies\",\n    category: \"case-studies\"\n  },\n  {\n    id: \"api-developer-documentation\",\n    title: \"Developer API Documentation\",\n    description: \"Complete technical documentation for Medicare AI platform APIs, including authentication, endpoints, and integration examples.\",\n    type: \"TECHNICAL\",\n    date: \"March 2023\",\n    pages: \"45 pages\",\n    publisher: \"Medicare Developer\",\n    category: \"technical\"\n  },\n  {\n    id: \"ai-imaging-masterclass\",\n    title: \"AI in Medical Imaging Masterclass\", \n    description: \"Comprehensive educational series covering AI fundamentals, clinical applications, and implementation strategies for healthcare professionals.\",\n    type: \"WEBINAR\",\n    date: \"February 2023\",\n    pages: \"120 min\",\n    publisher: \"Medicare Education\",\n    category: \"webinar\"\n  },\n  {\n    id: \"regulatory-compliance-guide\",\n    title: \"Regulatory Compliance Guide for AI Imaging\",\n    description: \"Complete guide to FDA regulations, CE marking requirements, and international compliance standards for AI-powered medical imaging systems.\",\n    type: \"WHITEPAPER\",\n    date: \"January 2023\", \n    pages: \"20 pages\",\n    publisher: \"Medicare Regulatory\",\n    category: \"whitepapers\"\n  }\n];\n\nconst categories = [\n  { id: \"all\", label: \"All Resources\", count: resources.length },\n  { id: \"research\", label: \"Research Papers\", count: resources.filter(r => r.category === \"research\").length },\n  { id: \"whitepapers\", label: \"Whitepapers\", count: resources.filter(r => r.category === \"whitepapers\").length },\n  { id: \"case-studies\", label: \"Case Studies\", count: resources.filter(r => r.category === \"case-studies\").length },\n  { id: \"technical\", label: \"Technical Docs\", count: resources.filter(r => r.category === \"technical\").length },\n  { id: \"webinar\", label: \"Webinars\", count: resources.filter(r => r.category === \"webinar\").length }\n];\n\nconst getTypeColor = (type: string) => {\n  switch (type) {\n    case \"RESEARCH PAPER\":\n      return \"bg-[var(--medical-blue)] text-white\";\n    case \"WHITEPAPER\":\n      return \"bg-green-600 text-white\";\n    case \"CASE STUDY\":\n      return \"bg-orange-600 text-white\";\n    case \"TECHNICAL\":\n      return \"bg-gray-600 text-white\";\n    case \"WEBINAR\":\n      return \"bg-purple-600 text-white\";\n    default:\n      return \"bg-gray-100 text-gray-800\";\n  }\n};\n\nconst getTypeIcon = (type: string) => {\n  switch (type) {\n    case \"RESEARCH PAPER\":\n      return FileText;\n    case \"WHITEPAPER\":\n      return Book;\n    case \"CASE STUDY\":\n      return Presentation;\n    case \"TECHNICAL\":\n      return FileText;\n    case \"WEBINAR\":\n      return Video;\n    default:\n      return FileText;\n  }\n};\n\nexport default function Resources() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 6;\n\n  const filteredResources = resources\n    .filter(resource => selectedCategory === \"all\" || resource.category === selectedCategory)\n    .filter(resource => \n      searchQuery === \"\" || \n      resource.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      resource.description.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      resource.type.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n  const totalPages = Math.ceil(filteredResources.length / itemsPerPage);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const paginatedResources = filteredResources.slice(startIndex, startIndex + itemsPerPage);\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-16 bg-gradient-to-br from-blue-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center max-w-4xl mx-auto\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <h1 className=\"text-5xl font-bold text-gray-900 mb-6\">\n              Research & Resources\n            </h1>\n            <p className=\"text-xl text-gray-600 mb-8\">\n              Access peer-reviewed research, technical documentation, and clinical evidence \n              supporting our AI solutions. Stay informed with the latest advances in medical AI.\n            </p>\n            <Button \n              size=\"lg\"\n              className=\"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\"\n              onClick={() => document.getElementById('resources')?.scrollIntoView({ behavior: 'smooth' })}\n            >\n              Explore Resources\n              <ArrowRight className=\"ml-2 h-4 w-4\" />\n            </Button>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Search and Filter Section */}\n      <section id=\"resources\" className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Search Bar */}\n          <motion.div\n            className=\"max-w-2xl mx-auto mb-12\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <div className=\"relative\">\n              <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n              <Input\n                placeholder=\"Search resources, topics, or keywords...\"\n                value={searchQuery}\n                onChange={(e) => {\n                  setSearchQuery(e.target.value);\n                  setCurrentPage(1);\n                }}\n                className=\"pl-12 h-12 text-lg\"\n              />\n            </div>\n          </motion.div>\n\n          {/* Category Filter */}\n          <motion.div\n            className=\"flex flex-wrap justify-center gap-3 mb-12\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            viewport={{ once: true }}\n          >\n            {categories.map((category) => (\n              <Button\n                key={category.id}\n                variant={selectedCategory === category.id ? \"default\" : \"outline\"}\n                onClick={() => {\n                  setSelectedCategory(category.id);\n                  setCurrentPage(1);\n                }}\n                className={`${selectedCategory === category.id ? \n                  \"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\" : \n                  \"hover:bg-gray-100\"}`}\n              >\n                <Filter className=\"mr-2 h-4 w-4\" />\n                {category.label} ({category.count})\n              </Button>\n            ))}\n          </motion.div>\n\n          {/* Results Summary */}\n          <motion.div\n            className=\"text-center mb-8\"\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            transition={{ duration: 0.6, delay: 0.3 }}\n            viewport={{ once: true }}\n          >\n            <p className=\"text-gray-600\">\n              Showing {startIndex + 1}-{Math.min(startIndex + itemsPerPage, filteredResources.length)} of {filteredResources.length} resources\n            </p>\n          </motion.div>\n\n          {/* Resources Grid */}\n          {paginatedResources.length > 0 ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12\">\n              {paginatedResources.map((resource, index) => {\n                const IconComponent = getTypeIcon(resource.type);\n                \n                return (\n                  <motion.div\n                    key={resource.id}\n                    initial={{ opacity: 0, y: 30 }}\n                    whileInView={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.6, delay: index * 0.1 }}\n                    viewport={{ once: true }}\n                  >\n                    <Card className=\"hover-lift border-0 shadow-lg h-full\">\n                      <CardContent className=\"p-8\">\n                        <div className=\"flex justify-between items-start mb-4\">\n                          <Badge className={getTypeColor(resource.type)}>\n                            {resource.type}\n                          </Badge>\n                          <span className=\"text-gray-500 text-sm\">{resource.date}</span>\n                        </div>\n                        \n                        <div className=\"flex items-start mb-4\">\n                          <IconComponent className=\"text-[var(--medical-blue)] h-6 w-6 mr-3 mt-1 flex-shrink-0\" />\n                          <h3 className=\"text-xl font-bold text-gray-900 line-clamp-2\">\n                            {resource.title}\n                          </h3>\n                        </div>\n                        \n                        <p className=\"text-gray-600 mb-6 line-clamp-3\">\n                          {resource.description}\n                        </p>\n                        \n                        <div className=\"flex items-center justify-between mb-6\">\n                          <div className=\"text-sm text-gray-500\">\n                            {resource.pages} • {resource.publisher}\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex gap-3\">\n                          <Button \n                            size=\"sm\"\n                            className=\"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)] flex-1\"\n                          >\n                            <Download className=\"mr-2 h-4 w-4\" />\n                            {resource.type === \"WEBINAR\" ? \"Watch\" : \"Download\"}\n                          </Button>\n                          {resource.type === \"WEBINAR\" && (\n                            <Button size=\"sm\" variant=\"outline\">\n                              <PlayCircle className=\"mr-2 h-4 w-4\" />\n                              Preview\n                            </Button>\n                          )}\n                          {resource.type === \"RESEARCH PAPER\" && (\n                            <Button size=\"sm\" variant=\"outline\">\n                              <ExternalLink className=\"mr-2 h-4 w-4\" />\n                              Journal\n                            </Button>\n                          )}\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                );\n              })}\n            </div>\n          ) : (\n            <motion.div\n              className=\"text-center py-16\"\n              initial={{ opacity: 0 }}\n              whileInView={{ opacity: 1 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <Search className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                No resources found\n              </h3>\n              <p className=\"text-gray-600\">\n                Try adjusting your search criteria or category filter.\n              </p>\n            </motion.div>\n          )}\n\n          {/* Pagination */}\n          {totalPages > 1 && (\n            <motion.div\n              className=\"flex justify-center gap-2\"\n              initial={{ opacity: 0 }}\n              whileInView={{ opacity: 1 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <Button\n                variant=\"outline\"\n                onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                disabled={currentPage === 1}\n              >\n                Previous\n              </Button>\n              \n              {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\n                <Button\n                  key={page}\n                  variant={currentPage === page ? \"default\" : \"outline\"}\n                  onClick={() => setCurrentPage(page)}\n                  className={currentPage === page ? \n                    \"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\" : \n                    \"\"}\n                >\n                  {page}\n                </Button>\n              ))}\n              \n              <Button\n                variant=\"outline\"\n                onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n                disabled={currentPage === totalPages}\n              >\n                Next\n              </Button>\n            </motion.div>\n          )}\n        </div>\n      </section>\n\n      {/* Newsletter Signup */}\n      <section className=\"py-20 bg-[var(--medical-blue)]\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-white mb-6\">\n              Stay Updated with Latest Research\n            </h2>\n            <p className=\"text-xl text-blue-100 mb-8\">\n              Subscribe to our research newsletter and be the first to access new publications, \n              case studies, and breakthrough developments in medical AI.\n            </p>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center max-w-lg mx-auto mb-8\">\n              <Input\n                placeholder=\"Enter your email address\"\n                className=\"bg-white border-0 h-12\"\n              />\n              <Button \n                className=\"bg-white text-[var(--medical-blue)] hover:bg-gray-100 h-12\"\n              >\n                Subscribe\n              </Button>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"text-center\">\n                <Calendar className=\"text-white h-6 w-6 mx-auto mb-2\" />\n                <div className=\"text-white font-medium\">Monthly Updates</div>\n                <div className=\"text-blue-100 text-sm\">Latest research & insights</div>\n              </div>\n              <div className=\"text-center\">\n                <FileText className=\"text-white h-6 w-6 mx-auto mb-2\" />\n                <div className=\"text-white font-medium\">Exclusive Content</div>\n                <div className=\"text-blue-100 text-sm\">Early access to publications</div>\n              </div>\n              <div className=\"text-center\">\n                <Video className=\"text-white h-6 w-6 mx-auto mb-2\" />\n                <div className=\"text-white font-medium\">Expert Webinars</div>\n                <div className=\"text-blue-100 text-sm\">Live sessions with researchers</div>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":19085},"client/src/pages/solutions.tsx":{"content":"import { Navigation } from \"@/components/navigation\";\nimport { Footer } from \"@/components/footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Building2, \n  Users, \n  Clock, \n  Shield, \n  TrendingUp, \n  Zap,\n  CheckCircle,\n  ArrowRight,\n  Hospital,\n  Stethoscope,\n  Activity\n} from \"lucide-react\";\nimport { motion } from \"framer-motion\";\n\nconst solutions = [\n  {\n    id: \"hospital-systems\",\n    title: \"Hospital Systems & Health Networks\",\n    description: \"Comprehensive AI imaging solutions for large healthcare organizations.\",\n    icon: Building2,\n    benefits: [\n      \"Standardized imaging protocols across facilities\",\n      \"Centralized AI deployment and management\", \n      \"Enterprise-level integration support\",\n      \"Volume-based pricing advantages\"\n    ],\n    useCases: [\n      \"Multi-site MRI acceleration\",\n      \"Standardized image quality\",\n      \"Reduced variation between locations\",\n      \"Improved patient throughput\"\n    ],\n    image: \"https://images.unsplash.com/photo-1586773860418-d37222d8fce3?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\"\n  },\n  {\n    id: \"imaging-centers\",\n    title: \"Imaging Centers & Radiology Groups\",\n    description: \"Specialized solutions for dedicated imaging facilities and practices.\",\n    icon: Activity,\n    benefits: [\n      \"Faster patient scans and higher throughput\",\n      \"Competitive advantage with premium quality\",\n      \"Reduced need for repeat scans\",\n      \"Enhanced patient satisfaction\"\n    ],\n    useCases: [\n      \"Outpatient MRI acceleration\",\n      \"PET dose reduction protocols\",\n      \"Same-day reporting capabilities\", \n      \"Enhanced diagnostic confidence\"\n    ],\n    image: \"https://images.unsplash.com/photo-1551076805-e1869033e561?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\"\n  },\n  {\n    id: \"academic-research\",\n    title: \"Academic & Research Institutions\", \n    description: \"Advanced AI tools for research protocols and clinical studies.\",\n    icon: Users,\n    benefits: [\n      \"Consistent image quality for research\",\n      \"Accelerated data collection\",\n      \"Standardized processing protocols\",\n      \"Publication-ready results\"\n    ],\n    useCases: [\n      \"Longitudinal study standardization\",\n      \"Multi-center research protocols\",\n      \"Clinical trial acceleration\",\n      \"Research data consistency\"\n    ],\n    image: \"https://images.unsplash.com/photo-1582719471384-894fbb16e074?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\"\n  }\n];\n\nconst integrationFeatures = [\n  {\n    icon: Zap,\n    title: \"Seamless Integration\",\n    description: \"Deploy between your existing scanners and PACS with no workflow disruption.\"\n  },\n  {\n    icon: Shield,\n    title: \"Enterprise Security\", \n    description: \"HIPAA-compliant infrastructure with enterprise-grade security and privacy.\"\n  },\n  {\n    icon: Clock,\n    title: \"24/7 Support\",\n    description: \"Round-the-clock technical support and monitoring for uninterrupted operation.\"\n  },\n  {\n    icon: TrendingUp,\n    title: \"Scalable Deployment\",\n    description: \"Start with one scanner or deploy across your entire imaging network.\"\n  }\n];\n\nexport default function Solutions() {\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-16 bg-gradient-to-br from-blue-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center max-w-4xl mx-auto\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <h1 className=\"text-5xl font-bold text-gray-900 mb-6\">\n              Solutions for Every Healthcare Setting\n            </h1>\n            <p className=\"text-xl text-gray-600 mb-8\">\n              Whether you're a large health system, imaging center, or research institution, \n              our AI solutions adapt to your specific needs and workflows.\n            </p>\n            <Button \n              size=\"lg\"\n              className=\"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\"\n              onClick={() => document.getElementById('solutions')?.scrollIntoView({ behavior: 'smooth' })}\n            >\n              Explore Solutions\n              <ArrowRight className=\"ml-2 h-4 w-4\" />\n            </Button>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Solutions by Industry */}\n      <section id=\"solutions\" className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">\n              Tailored Solutions by Industry\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Our AI platform adapts to different healthcare environments, providing customized \n              benefits for your specific use case.\n            </p>\n          </motion.div>\n\n          <div className=\"space-y-20\">\n            {solutions.map((solution, index) => {\n              const IconComponent = solution.icon;\n              const isEven = index % 2 === 0;\n              \n              return (\n                <motion.div\n                  key={solution.id}\n                  className={`grid grid-cols-1 lg:grid-cols-2 gap-12 items-center ${\n                    !isEven ? 'lg:flex-row-reverse' : ''\n                  }`}\n                  initial={{ opacity: 0, y: 50 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.8, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                >\n                  {/* Content */}\n                  <div className={isEven ? 'lg:pr-8' : 'lg:pl-8 lg:order-2'}>\n                    <div className=\"flex items-center mb-6\">\n                      <div className=\"bg-[var(--medical-blue)] p-3 rounded-lg mr-4\">\n                        <IconComponent className=\"text-white h-6 w-6\" />\n                      </div>\n                      <h3 className=\"text-2xl font-bold text-gray-900\">{solution.title}</h3>\n                    </div>\n                    \n                    <p className=\"text-gray-600 mb-8 text-lg\">\n                      {solution.description}\n                    </p>\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-8\">\n                      <div>\n                        <h4 className=\"font-semibold text-gray-900 mb-4\">Key Benefits</h4>\n                        <div className=\"space-y-3\">\n                          {solution.benefits.map((benefit, benefitIndex) => (\n                            <div key={benefitIndex} className=\"flex items-start\">\n                              <CheckCircle className=\"text-green-600 h-5 w-5 mr-3 mt-0.5 flex-shrink-0\" />\n                              <span className=\"text-gray-700 text-sm\">{benefit}</span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <h4 className=\"font-semibold text-gray-900 mb-4\">Use Cases</h4>\n                        <div className=\"space-y-3\">\n                          {solution.useCases.map((useCase, useCaseIndex) => (\n                            <div key={useCaseIndex} className=\"flex items-start\">\n                              <CheckCircle className=\"text-blue-600 h-5 w-5 mr-3 mt-0.5 flex-shrink-0\" />\n                              <span className=\"text-gray-700 text-sm\">{useCase}</span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n\n                    <Button \n                      className=\"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\"\n                    >\n                      Learn More About This Solution\n                    </Button>\n                  </div>\n\n                  {/* Image */}\n                  <div className={`${!isEven ? 'lg:order-1' : ''}`}>\n                    <Card className=\"overflow-hidden shadow-xl border-0\">\n                      <CardContent className=\"p-0\">\n                        <img\n                          src={solution.image}\n                          alt={solution.title}\n                          className=\"w-full h-80 object-cover\"\n                        />\n                      </CardContent>\n                    </Card>\n                  </div>\n                </motion.div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* Integration Features */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">\n              Enterprise-Ready Integration\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Our solutions integrate seamlessly with your existing infrastructure, \n              providing enterprise-grade reliability and support.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {integrationFeatures.map((feature, index) => {\n              const IconComponent = feature.icon;\n              \n              return (\n                <motion.div\n                  key={feature.title}\n                  initial={{ opacity: 0, y: 30 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                >\n                  <Card className=\"text-center border-0 shadow-lg hover-lift\">\n                    <CardContent className=\"p-8\">\n                      <div className=\"bg-[var(--medical-blue)] p-4 rounded-full inline-flex mb-6\">\n                        <IconComponent className=\"text-white h-6 w-6\" />\n                      </div>\n                      <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">\n                        {feature.title}\n                      </h3>\n                      <p className=\"text-gray-600\">\n                        {feature.description}\n                      </p>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              );\n            })}\n          </div>\n        </div>\n      </section>\n\n      {/* ROI Calculator Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <div className=\"bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-12\">\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">\n                Calculate Your ROI\n              </h2>\n              <p className=\"text-xl text-gray-600 mb-8\">\n                See how much time and money you could save with our AI solutions. \n                Most customers see ROI within 8-12 months.\n              </p>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-[var(--medical-blue)] mb-2\">75%</div>\n                  <div className=\"text-gray-600\">Average Time Savings</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-[var(--medical-blue)] mb-2\">$2.3M</div>\n                  <div className=\"text-gray-600\">Average Annual Savings</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-[var(--medical-blue)] mb-2\">8</div>\n                  <div className=\"text-gray-600\">Months to ROI</div>\n                </div>\n              </div>\n              \n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button \n                  size=\"lg\"\n                  className=\"bg-[var(--medical-blue)] hover:bg-[var(--medical-dark)]\"\n                >\n                  Calculate My ROI\n                </Button>\n                <Button size=\"lg\" variant=\"outline\">\n                  Download ROI Whitepaper\n                </Button>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-[var(--medical-blue)]\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold text-white mb-6\">\n              Ready to Get Started?\n            </h2>\n            <p className=\"text-xl text-blue-100 mb-8\">\n              Schedule a consultation with our solution experts to discuss your specific needs \n              and develop a customized implementation plan.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button \n                size=\"lg\"\n                className=\"bg-white text-[var(--medical-blue)] hover:bg-gray-100\"\n              >\n                Schedule Consultation\n              </Button>\n              <Button \n                size=\"lg\" \n                variant=\"outline\"\n                className=\"border-white text-white hover:bg-white hover:text-[var(--medical-blue)]\"\n              >\n                Request Proposal\n              </Button>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":14579},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}